"use strict";(self.webpackChunktrevas_documentation=self.webpackChunktrevas_documentation||[]).push([[8886],{48976:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var t=r(74848),o=r(28453);const s={id:"sdmx",title:"Spark mode - SDMX source",sidebar_label:"SDMX",slug:"/developer-guide/spark-mode/data-sources/sdmx",custom_edit_url:null},d=void 0,a={id:"developer-guide/spark-mode/data-sources/sdmx",title:"Spark mode - SDMX source",description:"Le module vtl-sdmx expose les utilitaires suivants.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/developer-guide/spark-mode/data-sources/sdmx.mdx",sourceDirName:"developer-guide/spark-mode/data-sources",slug:"/developer-guide/spark-mode/data-sources/sdmx",permalink:"/Trevas/fr/developer-guide/spark-mode/data-sources/sdmx",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",lastUpdatedAt:1731403926e3,frontMatter:{id:"sdmx",title:"Spark mode - SDMX source",sidebar_label:"SDMX",slug:"/developer-guide/spark-mode/data-sources/sdmx",custom_edit_url:null},sidebar:"docs",previous:{title:"Parquet",permalink:"/Trevas/fr/developer-guide/spark-mode/data-sources/parquet"},next:{title:"Others",permalink:"/Trevas/fr/developer-guide/spark-mode/data-sources/others"}},i={},l=[{value:"Outils disponibles",id:"outils-disponibles",level:4},{value:"Utilitaire <code>buildStructureFromSDMX3</code>",id:"utilitaire-buildstructurefromsdmx3",level:4},{value:"Objet <code>SDMXVTLWorkflow</code>",id:"objet-sdmxvtlworkflow",level:4},{value:"Fonction SDMXVTLWorkflow <code>run</code> - Mode aper\xe7u",id:"fonction-sdmxvtlworkflow-run---mode-aper\xe7u",level:4},{value:"Fonction SDMXVTLWorkflow <code>run</code>",id:"fonction-sdmxvtlworkflow-run",level:4},{value:"Fonction SDMXVTLWorkflow <code>getTransformationsVTL</code>",id:"fonction-sdmxvtlworkflow-gettransformationsvtl",level:4},{value:"Fonction SDMXVTLWorkflow <code>getRulesetsVTL</code>",id:"fonction-sdmxvtlworkflow-getrulesetsvtl",level:4},{value:"D\xe9pannage",id:"d\xe9pannage",level:2},{value:"Hadoop client",id:"hadoop-client",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Le module ",(0,t.jsx)(n.code,{children:"vtl-sdmx"})," expose les utilitaires suivants."]}),"\n",(0,t.jsx)(n.h4,{id:"outils-disponibles",children:"Outils disponibles"}),"\n",(0,t.jsxs)(n.h4,{id:"utilitaire-buildstructurefromsdmx3",children:["Utilitaire ",(0,t.jsx)(n.code,{children:"buildStructureFromSDMX3"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"TrevasSDMXUtils.buildStructureFromSDMX3"})," permet d'obtenir une Trevas DataStructure."]}),"\n",(0,t.jsx)(n.p,{children:"En fournissant les donn\xe9es correspondantes, vous pouvez cr\xe9er un Trevas Dataset."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'Structured.DataStructure structure = TrevasSDMXUtils.buildStructureFromSDMX3("path/sdmx_file.xml", "STRUCT_ID");\n\nSparkDataset ds = new SparkDataset(\n        spark.read()\n                .option("header", "true")\n                .option("delimiter", ";")\n                .option("quote", "\\"")\n                .csv("path"),\n        structure\n);\n'})}),"\n",(0,t.jsxs)(n.h4,{id:"objet-sdmxvtlworkflow",children:["Objet ",(0,t.jsx)(n.code,{children:"SDMXVTLWorkflow"})]}),"\n",(0,t.jsxs)(n.p,{children:["Le constructeur ",(0,t.jsx)(n.code,{children:"SDMXVTLWorkflow"})," contient 3 arguments:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["un ",(0,t.jsx)(n.code,{children:"ScriptEngine"})," (Trevas ou autre)"]}),"\n",(0,t.jsxs)(n.li,{children:["un ",(0,t.jsx)(n.code,{children:"ReadableDataLocation"}),"pour prendre en charge un message SDMX"]}),"\n",(0,t.jsx)(n.li,{children:"une correspondance entre noms et Datasets"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'SparkSession.builder()\n                .appName("test")\n                .master("local")\n                .getOrCreate();\n\nScriptEngineManager mgr = new ScriptEngineManager();\nScriptEngine engine = mgr.getEngineByExtension("vtl");\nengine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, "spark");\n\nReadableDataLocation rdl = new ReadableDataLocationTmp("src/test/resources/DSD_BPE_CENSUS.xml");\n\nSDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\n'})}),"\n",(0,t.jsx)(n.p,{children:"Cet objet permet alors d'acc\xe9der aux 3 fonctions suivantes."}),"\n",(0,t.jsxs)(n.h4,{id:"fonction-sdmxvtlworkflow-run---mode-aper\xe7u",children:["Fonction SDMXVTLWorkflow ",(0,t.jsx)(n.code,{children:"run"})," - Mode aper\xe7u"]}),"\n",(0,t.jsxs)(n.p,{children:["La fonction ",(0,t.jsx)(n.code,{children:"run"})," peut facilement \xeatre appel\xe9e en mode aper\xe7u, sans donn\xe9es jointes."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'ScriptEngineManager mgr = new ScriptEngineManager();\nScriptEngine engine = mgr.getEngineByExtension("vtl");\nengine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, "spark");\n\nReadableDataLocation rdl = new ReadableDataLocationTmp("src/test/resources/DSD_BPE_CENSUS.xml");\n\nSDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\n\n// instead of using TrevasSDMXUtils.buildStructureFromSDMX3 and data sources\n// to build Trevas Datasets, sdmxVtlWorkflow.getEmptyDatasets()\n// will handle SDMX message structures to produce Trevas Datasets\n// with metadata defined in this message, and adding empty data\nMap<String, Dataset> emptyDatasets = sdmxVtlWorkflow.getEmptyDatasets();\nengine.getBindings(ScriptContext.ENGINE_SCOPE).putAll(emptyDatasets);\n\nMap<String, PersistentDataset> result = sdmxVtlWorkflow.run();\n'})}),"\n",(0,t.jsx)(n.p,{children:"Le mode aper\xe7u permet de v\xe9rifier la conformit\xe9 du fichier SDMX et des m\xe9tadonn\xe9es des jeux de donn\xe9es en sortie."}),"\n",(0,t.jsxs)(n.h4,{id:"fonction-sdmxvtlworkflow-run",children:["Fonction SDMXVTLWorkflow ",(0,t.jsx)(n.code,{children:"run"})]}),"\n",(0,t.jsxs)(n.p,{children:["Une fois qu'un ",(0,t.jsx)(n.code,{children:"SDMXVTLWorkflow"})," est construit, il est facile d'ex\xe9cuter les validations et transformations VTL d\xe9finies dans le fichier SDMX."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'Structured.DataStructure structure = TrevasSDMXUtils.buildStructureFromSDMX3("path/sdmx_file.xml", "ds1");\n\nSparkDataset ds1 = new SparkDataset(\n        spark.read()\n                .option("header", "true")\n                .option("delimiter", ";")\n                .option("quote", "\\"")\n                .csv("path/data.csv"),\n        structure\n);\n\nScriptEngineManager mgr = new ScriptEngineManager();\nScriptEngine engine = mgr.getEngineByExtension("vtl");\nengine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, "spark");\n\nMap<String, Dataset> inputs = Map.of("ds1", ds1);\n\nReadableDataLocation rdl = new ReadableDataLocationTmp("path/sdmx_file.xml");\n\nSDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, inputs);\n\nMap<String, PersistentDataset> bindings = sdmxVtlWorkflow.run();\n'})}),"\n",(0,t.jsxs)(n.p,{children:["En cons\xe9quence, on recevra l'ensemble des donn\xe9es d\xe9finies comme persistantes dans la d\xe9finition ",(0,t.jsx)(n.code,{children:"TransformationSchemes"}),"."]}),"\n",(0,t.jsxs)(n.h4,{id:"fonction-sdmxvtlworkflow-gettransformationsvtl",children:["Fonction SDMXVTLWorkflow ",(0,t.jsx)(n.code,{children:"getTransformationsVTL"})]}),"\n",(0,t.jsx)(n.p,{children:"Permet d'obtenir le code VTL correspondant \xe0 la d\xe9finition SDMX TransformationSchemes."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"SDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\nString vtl = sdmxVtlWorkflow.getTransformationsVTL();\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"fonction-sdmxvtlworkflow-getrulesetsvtl",children:["Fonction SDMXVTLWorkflow ",(0,t.jsx)(n.code,{children:"getRulesetsVTL"})]}),"\n",(0,t.jsx)(n.p,{children:"Permet d'obtenir le code VTL correspondant \xe0 la d\xe9finition SDMX TransformationSchemes."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"SDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\nString dprs = sdmxVtlWorkflow.getRulesetsVTL();\n"})}),"\n",(0,t.jsx)(n.h2,{id:"d\xe9pannage",children:"D\xe9pannage"}),"\n",(0,t.jsx)(n.h3,{id:"hadoop-client",children:"Hadoop client"}),"\n",(0,t.jsxs)(n.p,{children:["L'int\xe9gration de ",(0,t.jsx)(n.code,{children:"vtl-modules"})," avec ",(0,t.jsx)(n.code,{children:"hadoop-client"})," peut poser des probl\xe8mes de d\xe9pendances."]}),"\n",(0,t.jsxs)(n.p,{children:["Il a \xe9t\xe9 remarqu\xe9 que ",(0,t.jsx)(n.code,{children:"com.fasterxml.woodstox.woodstox-core"})," est import\xe9 par ",(0,t.jsx)(n.code,{children:"hadoop-client"}),", avec une version incompatible avec la sous-d\xe9pendance ",(0,t.jsx)(n.code,{children:"vtl-sdmx"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Une fa\xe7on de r\xe9soudre ce probl\xe8me est d'exclure ",(0,t.jsx)(n.code,{children:"com.fasterxml.woodstox.woodstox-core"})," de ",(0,t.jsx)(n.code,{children:"hadoop-client"})," et d'importer une version plus r\xe9cente dans votre ",(0,t.jsx)(n.code,{children:"pom.xml"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.apache.hadoop</groupId>\n    <artifactId>hadoop-client</artifactId>\n    <version>3.3.4</version>\n    <exclusions>\n        <exclusion>\n            <groupId>com.fasterxml.woodstox</groupId>\n            <artifactId>woodstox-core</artifactId>\n        </exclusion>\n    </exclusions>\n</dependency>\n<dependency>\n    <groupId>com.fasterxml.woodstox</groupId>\n    <artifactId>woodstox-core</artifactId>\n    <version>6.5.1</version>\n</dependency>\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>a});var t=r(96540);const o={},s=t.createContext(o);function d(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);