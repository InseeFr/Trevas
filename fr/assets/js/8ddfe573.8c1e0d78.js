"use strict";(self.webpackChunktrevas_documentation=self.webpackChunktrevas_documentation||[]).push([[3032],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,f=p["".concat(i,".").concat(m)]||p[m]||c[m]||o;return n?r.createElement(f,l(l({ref:t},d),{},{components:n})):r.createElement(f,l({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:a,l[1]=s;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},99563:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var r=n(87462),a=(n(67294),n(3905)),o=n(44996),l=n(50941);const s={slug:"/trevas-sdmx",title:"Trevas - SDMX",authors:["nicolas"],tags:["Trevas","SDMX"]},i=void 0,u={permalink:"/Trevas/fr/blog/trevas-sdmx",source:"@site/i18n/fr/docusaurus-plugin-content-blog/2024-06-07-trevas-sdmx.mdx",title:"Trevas - SDMX",description:"Nouveaut\xe9s",date:"2024-06-07T00:00:00.000Z",formattedDate:"7 juin 2024",tags:[{label:"Trevas",permalink:"/Trevas/fr/blog/tags/trevas"},{label:"SDMX",permalink:"/Trevas/fr/blog/tags/sdmx"}],readingTime:2.54,hasTruncateMarker:!1,authors:[{name:"Nicolas Laval",link:"https://github.com/NicoLaval",title:"Making Sense - Developer",image:"/img/profile_pic_nicolas_laval.jpg",key:"nicolas"}],frontMatter:{slug:"/trevas-sdmx",title:"Trevas - SDMX",authors:["nicolas"],tags:["Trevas","SDMX"]},prevItem:{title:"Trevas - Op\xe9rateurs temporels",permalink:"/Trevas/fr/blog/trevas-temporal-operators"},nextItem:{title:"Trevas - Java 17",permalink:"/Trevas/fr/blog/trevas-java-17"}},d={authorsImageUrls:[void 0]},p=[{value:"Nouveaut\xe9s",id:"nouveaut\xe9s",level:3},{value:"Aper\xe7u",id:"aper\xe7u",level:4},{value:"Outils disponibles",id:"outils-disponibles",level:4},{value:"Utilitaire <code>buildStructureFromSDMX3</code>",id:"utilitaire-buildstructurefromsdmx3",level:4},{value:"Objet <code>SDMXVTLWorkflow</code>",id:"objet-sdmxvtlworkflow",level:4},{value:"Fonction SDMXVTLWorkflow <code>run</code> - Mode aper\xe7u",id:"fonction-sdmxvtlworkflow-run---mode-aper\xe7u",level:4},{value:"Fonction SDMXVTLWorkflow <code>run</code>",id:"fonction-sdmxvtlworkflow-run",level:4},{value:"Fonction SDMXVTLWorkflow <code>getTransformationsVTL</code>",id:"fonction-sdmxvtlworkflow-gettransformationsvtl",level:4},{value:"Fonction SDMXVTLWorkflow <code>getRulesetsVTL</code>",id:"fonction-sdmxvtlworkflow-getrulesetsvtl",level:4}],c={toc:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"nouveaut\xe9s"},"Nouveaut\xe9s"),(0,a.kt)("p",null,"Trevas 1.4.0 introduit le module VTL SDMX."),(0,a.kt)("p",null,"Ce module permet de consommer des sources de m\xe9tadonn\xe9es SDMX pour instancier les structures de donn\xe9es et les ensembles de donn\xe9es Trevas."),(0,a.kt)("p",null,"Il permet \xe9galement d'ex\xe9cuter les VTL TransformationSchemes pour obtenir les ensembles de donn\xe9es persistants r\xe9sultants."),(0,a.kt)("h4",{id:"aper\xe7u"},"Aper\xe7u"),(0,a.kt)("div",{style:{textAlign:"center"}},(0,a.kt)(l.Z,{alt:"Diagramme VTL SDMX",sources:{light:(0,o.Z)("/img/vtl-sdmx-light.svg"),dark:(0,o.Z)("/img/vtl-sdmx-dark.svg")},mdxType:"ThemedImage"})),(0,a.kt)("p",null,"Trevas prend en charge les \xe9l\xe9ments de message SDMX ci-dessus. Seul l'attribut VtlMappingSchemes est facultatif."),(0,a.kt)("p",null,"Les \xe9l\xe9ments de la case 1 sont utilis\xe9s pour produire des Trevas DataStructures, en valorisant les attributs des composants VTL : name, role, type, nullable et valuedomain."),(0,a.kt)("p",null,"Les \xe9l\xe9ments de la case 2 sont utilis\xe9s pour g\xe9n\xe9rer le code VTL (ensembles de r\xe8gles et transformations)."),(0,a.kt)("h4",{id:"outils-disponibles"},"Outils disponibles"),(0,a.kt)("h4",{id:"utilitaire-buildstructurefromsdmx3"},"Utilitaire ",(0,a.kt)("inlineCode",{parentName:"h4"},"buildStructureFromSDMX3")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"TrevasSDMXUtils.buildStructureFromSDMX3")," permet d'obtenir une Trevas DataStructure."),(0,a.kt)("p",null,"En fournissant les donn\xe9es correspondantes, vous pouvez cr\xe9er un Trevas Dataset."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'Structured.DataStructure structure = TrevasSDMXUtils.buildStructureFromSDMX3("path/sdmx_file.xml", "STRUCT_ID");\n\nSparkDataset ds = new SparkDataset(\n        spark.read()\n                .option("header", "true")\n                .option("delimiter", ";")\n                .option("quote", "\\"")\n                .csv("path"),\n        structure\n);\n')),(0,a.kt)("h4",{id:"objet-sdmxvtlworkflow"},"Objet ",(0,a.kt)("inlineCode",{parentName:"h4"},"SDMXVTLWorkflow")),(0,a.kt)("p",null,"Le constructeur ",(0,a.kt)("inlineCode",{parentName:"p"},"SDMXVTLWorkflow")," contient 3 arguments:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"un ",(0,a.kt)("inlineCode",{parentName:"li"},"ScriptEngine")," (Trevas ou autre)"),(0,a.kt)("li",{parentName:"ul"},"un ",(0,a.kt)("inlineCode",{parentName:"li"},"ReadableDataLocation"),"pour prendre en charge un message SDMX"),(0,a.kt)("li",{parentName:"ul"},"une correspondance entre noms et Datasets")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'SparkSession.builder()\n                .appName("test")\n                .master("local")\n                .getOrCreate();\n\nScriptEngineManager mgr = new ScriptEngineManager();\nScriptEngine engine = mgr.getEngineByExtension("vtl");\nengine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, "spark");\n\nReadableDataLocation rdl = new ReadableDataLocationTmp("src/test/resources/DSD_BPE_CENSUS.xml");\n\nSDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\n')),(0,a.kt)("p",null,"Cet objet permet alors d'acc\xe9der aux 3 fonctions suivantes."),(0,a.kt)("h4",{id:"fonction-sdmxvtlworkflow-run---mode-aper\xe7u"},"Fonction SDMXVTLWorkflow ",(0,a.kt)("inlineCode",{parentName:"h4"},"run")," - Mode aper\xe7u"),(0,a.kt)("p",null,"La fonction ",(0,a.kt)("inlineCode",{parentName:"p"},"run")," peut facilement \xeatre appel\xe9e en mode aper\xe7u, sans donn\xe9es jointes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'ScriptEngineManager mgr = new ScriptEngineManager();\nScriptEngine engine = mgr.getEngineByExtension("vtl");\nengine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, "spark");\n\nReadableDataLocation rdl = new ReadableDataLocationTmp("src/test/resources/DSD_BPE_CENSUS.xml");\n\nSDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\n\n// instead of using TrevasSDMXUtils.buildStructureFromSDMX3 and data sources\n// to build Trevas Datasets, sdmxVtlWorkflow.getEmptyDatasets()\n// will handle SDMX message structures to produce Trevas Datasets\n// with metadata defined in this message, and adding empty data\nMap<String, Dataset> emptyDatasets = sdmxVtlWorkflow.getEmptyDatasets();\nengine.getBindings(ScriptContext.ENGINE_SCOPE).putAll(emptyDatasets);\n\nMap<String, PersistentDataset> result = sdmxVtlWorkflow.run();\n')),(0,a.kt)("p",null,"Le mode aper\xe7u permet de v\xe9rifier la conformit\xe9 du fichier SDMX et des m\xe9tadonn\xe9es des jeux de donn\xe9es en sortie."),(0,a.kt)("h4",{id:"fonction-sdmxvtlworkflow-run"},"Fonction SDMXVTLWorkflow ",(0,a.kt)("inlineCode",{parentName:"h4"},"run")),(0,a.kt)("p",null,"Une fois qu'un ",(0,a.kt)("inlineCode",{parentName:"p"},"SDMXVTLWorkflow")," est construit, il est facile d'ex\xe9cuter les validations et transformations VTL d\xe9finies dans le fichier SDMX."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'Structured.DataStructure structure = TrevasSDMXUtils.buildStructureFromSDMX3("path/sdmx_file.xml", "ds1");\n\nSparkDataset ds1 = new SparkDataset(\n        spark.read()\n                .option("header", "true")\n                .option("delimiter", ";")\n                .option("quote", "\\"")\n                .csv("path/data.csv"),\n        structure\n);\n\nScriptEngineManager mgr = new ScriptEngineManager();\nScriptEngine engine = mgr.getEngineByExtension("vtl");\nengine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, "spark");\n\nMap<String, Dataset> inputs = Map.of("ds1", ds1);\n\nReadableDataLocation rdl = new ReadableDataLocationTmp("path/sdmx_file.xml");\n\nSDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, inputs);\n\nMap<String, PersistentDataset> bindings = sdmxVtlWorkflow.run();\n')),(0,a.kt)("p",null,"En cons\xe9quence, on recevra l'ensemble des donn\xe9es d\xe9finies comme persistantes dans la d\xe9finition ",(0,a.kt)("inlineCode",{parentName:"p"},"TransformationSchemes"),"."),(0,a.kt)("h4",{id:"fonction-sdmxvtlworkflow-gettransformationsvtl"},"Fonction SDMXVTLWorkflow ",(0,a.kt)("inlineCode",{parentName:"h4"},"getTransformationsVTL")),(0,a.kt)("p",null,"Permet d'obtenir le code VTL correspondant \xe0 la d\xe9finition SDMX TransformationSchemes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"SDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\nString vtl = sdmxVtlWorkflow.getTransformationsVTL();\n")),(0,a.kt)("h4",{id:"fonction-sdmxvtlworkflow-getrulesetsvtl"},"Fonction SDMXVTLWorkflow ",(0,a.kt)("inlineCode",{parentName:"h4"},"getRulesetsVTL")),(0,a.kt)("p",null,"Permet d'obtenir le code VTL correspondant \xe0 la d\xe9finition SDMX TransformationSchemes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"SDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\nString dprs = sdmxVtlWorkflow.getRulesetsVTL();\n")))}m.isMDXComponent=!0}}]);