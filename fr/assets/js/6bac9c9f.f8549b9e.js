"use strict";(self.webpackChunktrevas_documentation=self.webpackChunktrevas_documentation||[]).push([[5697],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,f=u["".concat(s,".").concat(m)]||u[m]||c[m]||a;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var d=2;d<a;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},45323:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var r=n(87462),o=(n(67294),n(3905));const a={id:"sdmx",title:"Spark mode - SDMX source",sidebar_label:"SDMX",slug:"/developer-guide/spark-mode/data-sources/sdmx",custom_edit_url:null},l=void 0,i={unversionedId:"developer-guide/spark-mode/data-sources/sdmx",id:"developer-guide/spark-mode/data-sources/sdmx",title:"Spark mode - SDMX source",description:"Le module vtl-sdmx expose les utilitaires suivants.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/developer-guide/spark-mode/data-sources/sdmx.mdx",sourceDirName:"developer-guide/spark-mode/data-sources",slug:"/developer-guide/spark-mode/data-sources/sdmx",permalink:"/Trevas/fr/developer-guide/spark-mode/data-sources/sdmx",draft:!1,editUrl:null,tags:[],version:"current",lastUpdatedAt:1722183928,formattedLastUpdatedAt:"28 juil. 2024",frontMatter:{id:"sdmx",title:"Spark mode - SDMX source",sidebar_label:"SDMX",slug:"/developer-guide/spark-mode/data-sources/sdmx",custom_edit_url:null},sidebar:"docs",previous:{title:"Parquet",permalink:"/Trevas/fr/developer-guide/spark-mode/data-sources/parquet"},next:{title:"Others",permalink:"/Trevas/fr/developer-guide/spark-mode/data-sources/others"}},s={},d=[{value:"Outils disponibles",id:"outils-disponibles",level:4},{value:"Utilitaire <code>buildStructureFromSDMX3</code>",id:"utilitaire-buildstructurefromsdmx3",level:4},{value:"Objet <code>SDMXVTLWorkflow</code>",id:"objet-sdmxvtlworkflow",level:4},{value:"Fonction SDMXVTLWorkflow <code>run</code> - Mode aper\xe7u",id:"fonction-sdmxvtlworkflow-run---mode-aper\xe7u",level:4},{value:"Fonction SDMXVTLWorkflow <code>run</code>",id:"fonction-sdmxvtlworkflow-run",level:4},{value:"Fonction SDMXVTLWorkflow <code>getTransformationsVTL</code>",id:"fonction-sdmxvtlworkflow-gettransformationsvtl",level:4},{value:"Fonction SDMXVTLWorkflow <code>getRulesetsVTL</code>",id:"fonction-sdmxvtlworkflow-getrulesetsvtl",level:4},{value:"D\xe9pannage",id:"d\xe9pannage",level:2},{value:"Hadoop client",id:"hadoop-client",level:3}],p={toc:d};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Le module ",(0,o.kt)("inlineCode",{parentName:"p"},"vtl-sdmx")," expose les utilitaires suivants."),(0,o.kt)("h4",{id:"outils-disponibles"},"Outils disponibles"),(0,o.kt)("h4",{id:"utilitaire-buildstructurefromsdmx3"},"Utilitaire ",(0,o.kt)("inlineCode",{parentName:"h4"},"buildStructureFromSDMX3")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"TrevasSDMXUtils.buildStructureFromSDMX3")," permet d'obtenir une Trevas DataStructure."),(0,o.kt)("p",null,"En fournissant les donn\xe9es correspondantes, vous pouvez cr\xe9er un Trevas Dataset."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'Structured.DataStructure structure = TrevasSDMXUtils.buildStructureFromSDMX3("path/sdmx_file.xml", "STRUCT_ID");\n\nSparkDataset ds = new SparkDataset(\n        spark.read()\n                .option("header", "true")\n                .option("delimiter", ";")\n                .option("quote", "\\"")\n                .csv("path"),\n        structure\n);\n')),(0,o.kt)("h4",{id:"objet-sdmxvtlworkflow"},"Objet ",(0,o.kt)("inlineCode",{parentName:"h4"},"SDMXVTLWorkflow")),(0,o.kt)("p",null,"Le constructeur ",(0,o.kt)("inlineCode",{parentName:"p"},"SDMXVTLWorkflow")," contient 3 arguments:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"un ",(0,o.kt)("inlineCode",{parentName:"li"},"ScriptEngine")," (Trevas ou autre)"),(0,o.kt)("li",{parentName:"ul"},"un ",(0,o.kt)("inlineCode",{parentName:"li"},"ReadableDataLocation"),"pour prendre en charge un message SDMX"),(0,o.kt)("li",{parentName:"ul"},"une correspondance entre noms et Datasets")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'SparkSession.builder()\n                .appName("test")\n                .master("local")\n                .getOrCreate();\n\nScriptEngineManager mgr = new ScriptEngineManager();\nScriptEngine engine = mgr.getEngineByExtension("vtl");\nengine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, "spark");\n\nReadableDataLocation rdl = new ReadableDataLocationTmp("src/test/resources/DSD_BPE_CENSUS.xml");\n\nSDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\n')),(0,o.kt)("p",null,"Cet objet permet alors d'acc\xe9der aux 3 fonctions suivantes."),(0,o.kt)("h4",{id:"fonction-sdmxvtlworkflow-run---mode-aper\xe7u"},"Fonction SDMXVTLWorkflow ",(0,o.kt)("inlineCode",{parentName:"h4"},"run")," - Mode aper\xe7u"),(0,o.kt)("p",null,"La fonction ",(0,o.kt)("inlineCode",{parentName:"p"},"run")," peut facilement \xeatre appel\xe9e en mode aper\xe7u, sans donn\xe9es jointes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'ScriptEngineManager mgr = new ScriptEngineManager();\nScriptEngine engine = mgr.getEngineByExtension("vtl");\nengine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, "spark");\n\nReadableDataLocation rdl = new ReadableDataLocationTmp("src/test/resources/DSD_BPE_CENSUS.xml");\n\nSDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\n\n// instead of using TrevasSDMXUtils.buildStructureFromSDMX3 and data sources\n// to build Trevas Datasets, sdmxVtlWorkflow.getEmptyDatasets()\n// will handle SDMX message structures to produce Trevas Datasets\n// with metadata defined in this message, and adding empty data\nMap<String, Dataset> emptyDatasets = sdmxVtlWorkflow.getEmptyDatasets();\nengine.getBindings(ScriptContext.ENGINE_SCOPE).putAll(emptyDatasets);\n\nMap<String, PersistentDataset> result = sdmxVtlWorkflow.run();\n')),(0,o.kt)("p",null,"Le mode aper\xe7u permet de v\xe9rifier la conformit\xe9 du fichier SDMX et des m\xe9tadonn\xe9es des jeux de donn\xe9es en sortie."),(0,o.kt)("h4",{id:"fonction-sdmxvtlworkflow-run"},"Fonction SDMXVTLWorkflow ",(0,o.kt)("inlineCode",{parentName:"h4"},"run")),(0,o.kt)("p",null,"Une fois qu'un ",(0,o.kt)("inlineCode",{parentName:"p"},"SDMXVTLWorkflow")," est construit, il est facile d'ex\xe9cuter les validations et transformations VTL d\xe9finies dans le fichier SDMX."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'Structured.DataStructure structure = TrevasSDMXUtils.buildStructureFromSDMX3("path/sdmx_file.xml", "ds1");\n\nSparkDataset ds1 = new SparkDataset(\n        spark.read()\n                .option("header", "true")\n                .option("delimiter", ";")\n                .option("quote", "\\"")\n                .csv("path/data.csv"),\n        structure\n);\n\nScriptEngineManager mgr = new ScriptEngineManager();\nScriptEngine engine = mgr.getEngineByExtension("vtl");\nengine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, "spark");\n\nMap<String, Dataset> inputs = Map.of("ds1", ds1);\n\nReadableDataLocation rdl = new ReadableDataLocationTmp("path/sdmx_file.xml");\n\nSDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, inputs);\n\nMap<String, PersistentDataset> bindings = sdmxVtlWorkflow.run();\n')),(0,o.kt)("p",null,"En cons\xe9quence, on recevra l'ensemble des donn\xe9es d\xe9finies comme persistantes dans la d\xe9finition ",(0,o.kt)("inlineCode",{parentName:"p"},"TransformationSchemes"),"."),(0,o.kt)("h4",{id:"fonction-sdmxvtlworkflow-gettransformationsvtl"},"Fonction SDMXVTLWorkflow ",(0,o.kt)("inlineCode",{parentName:"h4"},"getTransformationsVTL")),(0,o.kt)("p",null,"Permet d'obtenir le code VTL correspondant \xe0 la d\xe9finition SDMX TransformationSchemes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"SDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\nString vtl = sdmxVtlWorkflow.getTransformationsVTL();\n")),(0,o.kt)("h4",{id:"fonction-sdmxvtlworkflow-getrulesetsvtl"},"Fonction SDMXVTLWorkflow ",(0,o.kt)("inlineCode",{parentName:"h4"},"getRulesetsVTL")),(0,o.kt)("p",null,"Permet d'obtenir le code VTL correspondant \xe0 la d\xe9finition SDMX TransformationSchemes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"SDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\nString dprs = sdmxVtlWorkflow.getRulesetsVTL();\n")),(0,o.kt)("h2",{id:"d\xe9pannage"},"D\xe9pannage"),(0,o.kt)("h3",{id:"hadoop-client"},"Hadoop client"),(0,o.kt)("p",null,"L'int\xe9gration de ",(0,o.kt)("inlineCode",{parentName:"p"},"vtl-modules")," avec ",(0,o.kt)("inlineCode",{parentName:"p"},"hadoop-client")," peut poser des probl\xe8mes de d\xe9pendances."),(0,o.kt)("p",null,"Il a \xe9t\xe9 remarqu\xe9 que ",(0,o.kt)("inlineCode",{parentName:"p"},"com.fasterxml.woodstox.woodstox-core")," est import\xe9 par ",(0,o.kt)("inlineCode",{parentName:"p"},"hadoop-client"),", avec une version incompatible avec la sous-d\xe9pendance ",(0,o.kt)("inlineCode",{parentName:"p"},"vtl-sdmx"),"."),(0,o.kt)("p",null,"Une fa\xe7on de r\xe9soudre ce probl\xe8me est d'exclure ",(0,o.kt)("inlineCode",{parentName:"p"},"com.fasterxml.woodstox.woodstox-core")," de ",(0,o.kt)("inlineCode",{parentName:"p"},"hadoop-client")," et d'importer une version plus r\xe9cente dans votre ",(0,o.kt)("inlineCode",{parentName:"p"},"pom.xml"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.apache.hadoop</groupId>\n    <artifactId>hadoop-client</artifactId>\n    <version>3.3.4</version>\n    <exclusions>\n        <exclusion>\n            <groupId>com.fasterxml.woodstox</groupId>\n            <artifactId>woodstox-core</artifactId>\n        </exclusion>\n    </exclusions>\n</dependency>\n<dependency>\n    <groupId>com.fasterxml.woodstox</groupId>\n    <artifactId>woodstox-core</artifactId>\n    <version>6.5.1</version>\n</dependency>\n")))}u.isMDXComponent=!0}}]);