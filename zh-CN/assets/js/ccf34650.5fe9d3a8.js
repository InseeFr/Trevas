"use strict";(self.webpackChunktrevas_documentation=self.webpackChunktrevas_documentation||[]).push([[7213],{41895:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"user-guide/coverage/general-operators","title":"VTL - General purpose operators","description":"| Name                                               | Symbol |     Supported      |","source":"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/user-guide/coverage/general-operators.mdx","sourceDirName":"user-guide/coverage","slug":"/user-guide/coverage/general-operators","permalink":"/Trevas/zh-CN/user-guide/coverage/general-operators","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","lastUpdatedAt":1755197142000,"frontMatter":{"id":"general-operators","title":"VTL - General purpose operators","sidebar_label":"General purpose operators","slug":"/user-guide/coverage/general-operators","custom_edit_url":null},"sidebar":"docs","previous":{"title":"\u6982\u8ff0","permalink":"/Trevas/zh-CN/user-guide/coverage"},"next":{"title":"Join operators","permalink":"/Trevas/zh-CN/user-guide/coverage/join-operators"}}');var s=r(74848),l=r(28453);const i={id:"general-operators",title:"VTL - General purpose operators",sidebar_label:"General purpose operators",slug:"/user-guide/coverage/general-operators",custom_edit_url:null},o=void 0,d={},c=[];function a(e){const t={table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Symbol"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Supported"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Parentheses"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"( )"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2714\ufe0f"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Persistent assignment"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"<-"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2714\ufe0f"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Temporary assignment"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:":="}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2714\ufe0f"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Membership"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"#"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2714\ufe0f"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"User-defined operator call"}),(0,s.jsx)(t.td,{style:{textAlign:"left"}}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2714\ufe0f"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Evaluation of an external routine"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"eval"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Type conversion (string, integer, double, boolean)"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"cast"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2714\ufe0f"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Type conversion (others)"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"cast"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u274c"})]})]})]})}function u(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var n=r(96540);const s={},l=n.createContext(s);function i(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);