"use strict";(self.webpackChunktrevas_documentation=self.webpackChunktrevas_documentation||[]).push([[4977],{34547:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/trevas-vtl-21","metadata":{"permalink":"/Trevas/blog/trevas-vtl-21","source":"@site/blog/2024-10-09-trevas-vtl-21.mdx","title":"Trevas - VTL 2.1","description":"Trevas 1.7.0 upgrade to version 2.1 of VTL.","date":"2024-10-09T00:00:00.000Z","tags":[{"inline":true,"label":"Trevas","permalink":"/Trevas/blog/tags/trevas"},{"inline":true,"label":"VTL 2.1","permalink":"/Trevas/blog/tags/vtl-2-1"}],"readingTime":0.51,"hasTruncateMarker":false,"authors":[{"name":"Nicolas Laval","link":"https://github.com/NicoLaval","title":"Making Sense - Developer","image":"/img/profile_pic_nicolas_laval.jpg","key":"nicolas","page":null}],"frontMatter":{"slug":"/trevas-vtl-21","title":"Trevas - VTL 2.1","authors":["nicolas"],"tags":["Trevas","VTL 2.1"]},"unlisted":false,"nextItem":{"title":"Trevas - Provenance","permalink":"/Trevas/blog/trevas-provenance"}},"content":"import useBaseUrl from \'@docusaurus/useBaseUrl\';\\nimport Link from \'@theme/Link\';\\n\\nTrevas 1.7.0 upgrade to version 2.1 of VTL.\\n\\nThis version introduces two new operators:\\n\\n- `random`\\n- `case`\\n\\n`random` produces a decimal number between 0 and 1.\\n\\n`case` allows for clearer multi conditional branching, for example:\\n\\n`ds2 := ds1[ calc c := case when r < 0.2 then \\"Low\\" when r > 0.8 then \\"High\\" else \\"Medium\\" ]`\\n\\nBoth operators are already available in Trevas!\\n\\nThe new grammar also provides time operators and includes corrections, without any breaking changes compared to the 2.0 version.\\n\\nSee the <Link label={\\"coverage\\"} href={useBaseUrl(\'/user-guide/coverage\')} /> section for more details."},{"id":"/trevas-provenance","metadata":{"permalink":"/Trevas/blog/trevas-provenance","source":"@site/blog/2024-10-07-trevas-provenance.mdx","title":"Trevas - Provenance","description":"News","date":"2024-10-07T00:00:00.000Z","tags":[{"inline":true,"label":"Trevas","permalink":"/Trevas/blog/tags/trevas"},{"inline":true,"label":"provenance","permalink":"/Trevas/blog/tags/provenance"},{"inline":true,"label":"SDTH","permalink":"/Trevas/blog/tags/sdth"}],"readingTime":3.19,"hasTruncateMarker":false,"authors":[{"name":"Nicolas Laval","link":"https://github.com/NicoLaval","title":"Making Sense - Developer","image":"/img/profile_pic_nicolas_laval.jpg","key":"nicolas","page":null}],"frontMatter":{"slug":"/trevas-provenance","title":"Trevas - Provenance","authors":["nicolas"],"tags":["Trevas","provenance","SDTH"]},"unlisted":false,"prevItem":{"title":"Trevas - VTL 2.1","permalink":"/Trevas/blog/trevas-vtl-21"},"nextItem":{"title":"Trevas - SDMX","permalink":"/Trevas/blog/trevas-sdmx"}},"content":"import useBaseUrl from \'@docusaurus/useBaseUrl\';\\nimport Link from \'@theme/Link\';\\n\\n### News\\n\\nTrevas 1.6.0 introduces the VTL Prov module.\\n\\nThis module enables to produce lineage metadata from Trevas, based on RDF ontologies: `PROV-O` and `SDTH`.\\n\\n#### SDTH model overview\\n\\n```mermaid\\nclassDiagram\\n\\n  class Program[\\"sdth:Program\\"] {\\n    rdfs:label\\n  }\\n  class ProgramStep[\\"sdth:ProgramStep\\"] {\\n    rdfs:label\\n    sdth:hasSourceCode\\n    sdth:hasSDTL\\n  }\\n  class VariableInstance[\\"sdth:VariableInstance\\"] {\\n    rdfs:label\\n    sdth:hasName\\n  }\\n  class DataframeInstance[\\"sdth:DataframeInstance\\"] {\\n    rdfs:label\\n    sdth:hasName\\n  }\\n\\nclass FileInstance[\\"sdth:FileInstance\\"] {\\n    rdfs:label\\n    sdth:hasName\\n  }\\n\\n\\n  ProgramStep <-- Program : sdthhasProgramStep\\n  ProgramStep <-- ProgramStep : sdth_hasProgramStep\\n\\n  ProgramStep --\x3e VariableInstance : sdth_usesVariable\\n  ProgramStep --\x3e VariableInstance : sdth_assignsVariable\\n  ProgramStep --\x3e DataframeInstance : sdth_consumesDataframe\\n  ProgramStep --\x3e DataframeInstance : sdth_producesDataframe\\n\\n  ProgramStep --\x3e FileInstance : sdth_loadsFile\\n  ProgramStep --\x3e FileInstance : sdth_savesFile\\n\\n\\n  DataframeInstance --\x3e VariableInstance : sdth_hasVariableInstance\\n  FileInstance --\x3e VariableInstance : sdth_hasVariableInstance\\n\\n\\n  DataframeInstance --\x3e DataframeInstance : sdth_derivedFrom\\n  DataframeInstance --\x3e DataframeInstance : sdth_elaborationOf\\n\\n  FileInstance --\x3e FileInstance : sdth_derivedFrom\\n  FileInstance --\x3e FileInstance : sdth_elaborationOf\\n  VariableInstance --\x3e VariableInstance : sdth_derivedFrom\\n  VariableInstance --\x3e VariableInstance : sdth_elaborationOf\\n```\\n\\n#### Adopted model\\n\\nThe `vtl-prov` module, version 1.6.0, uses the following partial model:\\n\\n```mermaid\\nclassDiagram\\n  class Agent {\\n  }\\n  class Program {\\n    rdfs:label\\n  }\\n  class ProgramStep {\\n    rdfs:label\\n  }\\n  class VariableInstance {\\n    rdfs:label\\n    sdth:hasName\\n  }\\n  class DataframeInstance {\\n    rdfs:label\\n    sdth:hasName\\n  }\\n\\n  Agent <|-- Program\\n  ProgramStep <-- Program : sdth_hasProgramStep\\n  ProgramStep --\x3e VariableInstance : sdth_usesVariable\\n  ProgramStep --\x3e VariableInstance : sdth_assignsVariable\\n  ProgramStep --\x3e DataframeInstance : sdth_consumesDataframe\\n  ProgramStep --\x3e DataframeInstance : sdth_producesDataframe\\n  DataframeInstance --\x3e VariableInstance : sdth_hasVariableInstance\\n  DataframeInstance --\x3e DataframeInstance : sdth_wasDerivedFrom\\n  VariableInstance --\x3e VariableInstance : sdth_wasDerivedFrom\\n```\\n\\nImprovements will come in next weeks.\\n\\n#### Tools available\\n\\nProvenance Trevas tools are documented <Link label={\\"here\\"} href={useBaseUrl(\'/developer-guide/spark-mode/data-sources/sdmx\')} />.\\n\\n#### Example\\n\\n##### Business use case\\n\\nTwo sources datasets are transformed to produce transient datasets and a final permanent one.\\n\\n```mermaid\\nflowchart TD\\n    OP1{add +}\\n    OP2{multiply *}\\n    OP3{filter}\\n    OP4{create variable}\\n    SC3([3])\\n\\n   ds_1 --\x3e OP1\\n   ds_2 --\x3e OP1\\n   OP1 --\x3e ds_sum\\n   SC3 --\x3e OP2\\n   ds_sum --\x3e OP2\\n   OP2 --\x3e ds_mul\\n   ds_mul --\x3e OP3\\n   OP3 --\x3e OP4\\n   OP4 --\x3e ds_res\\n```\\n\\n### Inputs\\n\\n`ds1` & `ds2` metadata:\\n\\n|     id     |  var1   |  var2   |\\n| :--------: | :-----: | :-----: |\\n|   STRING   | INTEGER | NUMBER  |\\n| IDENTIFIER | MEASURE | MEASURE |\\n\\n### VTL script\\n\\n```vtl\\nds_sum := ds1 + ds2;\\nds_mul := ds_sum * 3;\\nds_res <- ds_mul[filter mod(var1, 2) = 0][calc var_sum := var1 + var2];\\n```\\n\\n### RDF model target\\n\\n```ttl\\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\nPREFIX prov: <http://www.w3.org/ns/prov#>\\nPREFIX sdth: <http://rdf-vocabulary.ddialliance.org/sdth#>\\n\\n# --- Program and steps\\n<http://example.com/program1> a sdth:Program ;\\n    a prov:Agent ; # Agent? Or an activity\\n    rdfs:label \\"My program 1\\"@en, \\"Mon programme 1\\"@fr ;\\n    sdth:hasProgramStep <http://example.com/program1/program-step1>,\\n                        <http://example.com/program1/program-step2>,\\n                        <http://example.com/program1/program-step3> .\\n\\n<http://example.com/program1/program-step1> a sdth:ProgramStep ;\\n    rdfs:label \\"Program step 1\\"@en, \\"\xc9tape 1\\"@fr ;\\n    sdth:hasSourceCode \\"ds_sum := ds1 + ds2;\\" ;\\n    sdth:consumesDataframe  <http://example.com/dataset/ds1>,\\n                            <http://example.com/dataset/ds2> ;\\n    sdth:producesDataframe <http://example.com/dataset/ds_sum> .\\n\\n<http://example.com/program1/program-step2> a sdth:ProgramStep ;\\n    rdfs:label \\"Program step 2\\"@en, \\"\xc9tape 2\\"@fr ;\\n    sdth:hasSourceCode \\"ds_mul := ds_sum * 3;\\" ;\\n    sdth:consumesDataframe <http://example.com/dataset/ds_sum> ;\\n    sdth:producesDataframe <http://example.com/dataset/ds_mul> .\\n\\n<http://example.com/program1/program-step3> a sdth:ProgramStep ;\\n    rdfs:label \\"Program step 3\\"@en, \\"\xc9tape 3\\"@fr ;\\n    sdth:hasSourceCode \\"ds_res <- ds_mul[filter mod(var1, 2) = 0][calc var_sum := var1 + var2];\\" ;\\n    sdth:consumesDataframe <http://example.com/dataset/ds_mul> ;\\n    sdth:producesDataframe <http://example.com/dataset/ds_res> ;\\n    sdth:usesVariable   <http://example.com/variable/var1>,\\n                        <http://example.com/variable/var2> ;\\n    sdth:assignsVariable <http://example.com/variable/var_sum> .\\n\\n# --- Variables\\n# i think here it\'s not instances but names we refer to...\\n<http://example.com/variable/id1> a sdth:VariableInstance ;\\n                                  rdfs:label \\"id1\\" .\\n<http://example.com/variable/var1> a sdth:VariableInstance ;\\n                                  rdfs:label \\"var1\\" .\\n<http://example.com/variable/var2> a sdth:VariableInstance ;\\n                                  rdfs:label \\"var2\\" .\\n<http://example.com/variable/var_sum> a sdth:VariableInstance ;\\n                                  rdfs:label \\"var_sum\\" .\\n\\n# --- Data frames\\n<http://example.com/dataset/ds1> a sdth:DataframeInstance ;\\n    rdfs:label \\"ds1\\" ;\\n    sdth:hasName \\"ds1\\" ;\\n    sdth:hasVariableInstance    <http://example.com/variable/id1>,\\n                                <http://example.com/variable/var1>,\\n                                <http://example.com/variable/var2> .\\n\\n<http://example.com/dataset/ds2> a sdth:DataframeInstance ;\\n    rdfs:label \\"ds2\\" ;\\n    sdth:hasName \\"ds2\\" ;\\n    sdth:hasVariableInstance    <http://example.com/variable/id1>,\\n                                <http://example.com/variable/var1>,\\n                                <http://example.com/variable/var2> .\\n\\n<http://example.com/dataset/ds_sum> a sdth:DataframeInstance ;\\n    rdfs:label \\"ds_sum\\" ;\\n    sdth:hasName \\"ds_sum\\" ;\\n    sdth:wasDerivedFrom <http://example.com/dataset/ds1>,\\n                        <http://example.com/dataset/ds2> ;\\n    sdth:hasVariableInstance    <http://example.com/variable/id1>,\\n                                <http://example.com/variable/var1>,\\n                                <http://example.com/variable/var2> .\\n\\n<http://example.com/dataset/ds_mul> a sdth:DataframeInstance ;\\n    rdfs:label \\"ds_mul\\" ;\\n    sdth:hasName \\"ds_mul\\" ;\\n    sdth:wasDerivedFrom <http://example.com/dataset/ds_sum> ;\\n    sdth:hasVariableInstance    <http://example.com/variable/id1>,\\n                                <http://example.com/variable/var1>,\\n                                <http://example.com/variable/var2> .\\n\\n<http://example.com/dataset/ds_res> a sdth:DataframeInstance ;\\n    rdfs:label \\"ds_res\\" ;\\n    sdth:wasDerivedFrom <http://example.com/dataset/ds_mul> ;\\n    sdth:hasVariableInstance    <http://example.com/variable/id1>,\\n                                <http://example.com/variable/var1>,\\n                                <http://example.com/variable/var2>,\\n                                <http://example.com/variable/var_sum> .\\n```"},{"id":"/trevas-sdmx","metadata":{"permalink":"/Trevas/blog/trevas-sdmx","source":"@site/blog/2024-06-25-trevas-sdmx.mdx","title":"Trevas - SDMX","description":"News","date":"2024-06-25T00:00:00.000Z","tags":[{"inline":true,"label":"Trevas","permalink":"/Trevas/blog/tags/trevas"},{"inline":true,"label":"SDMX","permalink":"/Trevas/blog/tags/sdmx"}],"readingTime":0.81,"hasTruncateMarker":false,"authors":[{"name":"Nicolas Laval","link":"https://github.com/NicoLaval","title":"Making Sense - Developer","image":"/img/profile_pic_nicolas_laval.jpg","key":"nicolas","page":null}],"frontMatter":{"slug":"/trevas-sdmx","title":"Trevas - SDMX","authors":["nicolas"],"tags":["Trevas","SDMX"]},"unlisted":false,"prevItem":{"title":"Trevas - Provenance","permalink":"/Trevas/blog/trevas-provenance"},"nextItem":{"title":"Trevas - Temporal operators","permalink":"/Trevas/blog/trevas-temporal-operators"}},"content":"import useBaseUrl from \'@docusaurus/useBaseUrl\';\\nimport ThemedImage from \'@theme/ThemedImage\';\\nimport Link from \'@theme/Link\';\\n\\n### News\\n\\nTrevas 1.4.1 introduces the VTL SDMX module.\\n\\nThis module enables to consume SDMX metadata sources to instantiate Trevas DataStructures and Datasets.\\n\\nIt also allows to execute the VTL TransformationSchemes to obtain the resulting persistent datasets.\\n\\n#### Overview\\n\\n<div style={{ textAlign: \'center\' }}>\\n\\t<ThemedImage\\n\\t\\talt=\\"VTL SDMX Diagram\\"\\n\\t\\tsources={{\\n\\t\\t\\tlight: useBaseUrl(\'/img/vtl-sdmx-light.svg\'),\\n\\t\\t\\tdark: useBaseUrl(\'/img/vtl-sdmx-dark.svg\'),\\n\\t\\t}}\\n\\t/>\\n</div>\\n\\nTrevas supports the above SDMX message elements. Only the VtlMappingSchemes element is optional.\\n\\nThe elements in box 1 are used to produce Trevas DataStructures, filling VTL components attributes name, role, type, nullable and valuedomain.\\n\\nThe elements in box 2 are used to generate the VTL code (rulesets & transformations).\\n\\n#### Tools available\\n\\nSDMX Trevas tools are documented <Link label={\\"here\\"} href={useBaseUrl(\'/developer-guide/spark-mode/data-sources/sdmx\')} />.\\n\\n#### Troubleshooting\\n\\nHave a look to <Link label={\\"this section\\"} href={useBaseUrl(\'/developer-guide/spark-mode/data-sources/sdmx#troubleshooting\')} />."},{"id":"/trevas-temporal-operators","metadata":{"permalink":"/Trevas/blog/trevas-temporal-operators","source":"@site/blog/2024-06-21-temporal-operators.mdx","title":"Trevas - Temporal operators","description":"Temporal operators in Trevas","date":"2024-06-21T00:00:00.000Z","tags":[{"inline":true,"label":"Trevas","permalink":"/Trevas/blog/tags/trevas"}],"readingTime":2.96,"hasTruncateMarker":false,"authors":[{"name":"Hadrien Kohl","link":"https://github.com/hadrienk","title":"Hadrien Kohl Consulting - Developer","image":"/img/profile_pic_hadrien_kohl.jpg","key":"hadrien","page":null}],"frontMatter":{"slug":"/trevas-temporal-operators","title":"Trevas - Temporal operators","authors":["hadrien"],"tags":["Trevas"]},"unlisted":false,"prevItem":{"title":"Trevas - SDMX","permalink":"/Trevas/blog/trevas-sdmx"},"nextItem":{"title":"Trevas - Java 17","permalink":"/Trevas/blog/trevas-java-17"}},"content":"### Temporal operators in Trevas\\n\\nThe version 1.4.1 of Trevas introduces preliminary support for date and time types\\nand operators.\\n\\nThe specification describes temporal types such as `date`, `time_period`, `time`, and `duration`. However, Trevas authors find\\nthese descriptions unsatisfactory. This blog post outlines our implementation choices and how they differ from the spec.\\n\\nIn the specification, `time_period` (and the types `date`) is described as a compound type with a start and end (or a\\nstart and a duration). This complicates the implementation and brings little value to the language as one can simply\\noperate on a combination of dates or date and duration directly. For this reason, we defined an algebra between the\\ntemporal types and did not yet implement the `time_period`.\\n\\n| result (operators) | date        | duration        | number        |\\n| ------------------ | ----------- | --------------- | ------------- |\\n| **date**           | n/a         | date (+, -)     | n/a           |\\n| **duration**       | date (+, -) | duration (+, -) | duration (\\\\*) |\\n| **number**         | n/a         | duration (\\\\*)   | n/a           |\\n\\nThe `period_indicator` function relies on period-awareness for types that are not defined enough at the moment to\\nbe implemented.\\n\\n#### Java mapping\\n\\nThe VTL type `date` is represented internally as the\\ntypes [`java.time.Instant`](https://docs.oracle.com/en%2Fjava%2Fjavase%2F11%2Fdocs%2Fapi%2F%2F/java.base/java/time/Instant.html),\\n[`java.time.ZonedDateTime`](https://docs.oracle.com/en%2Fjava%2Fjavase%2F11%2Fdocs%2Fapi%2F%2F/java.base/java/time/ZonedDateTime.html)\\nand [`java.time.OffsetDateTime`](https://docs.oracle.com/en%2Fjava%2Fjavase%2F11%2Fdocs%2Fapi%2F%2F/java.base/java/time/OffsetDateTime.html#:~:text=OffsetDateTime%20is%20an%20immutable%20representation,be%20stored%20in%20an%20OffsetDateTime%20.)\\n\\nInstant represent a specific moment in time. Note that this type does not include timezone information and is therefore\\nnot usable with all the operators. One can use the types `ZonedDateTime` and `OffsetDateTime` when timezone or time\\nsaving is required.\\n\\nThe VTL type `duration` is represented internally as the\\ntype [`org.threeten.extra.PeriodDuration`](https://www.threeten.org/threeten-extra/apidocs/org.threeten.extra/org/threeten/extra/PeriodDuration.html)\\nfrom the [threeten extra](https://www.threeten.org/threeten-extra/) package.\\nIt represents a duration using both calendar units (years, months, days) and a temporal amount (hours, minutes, seconds\\nand nanoseconds).\\n\\n#### Function `flow_to_stock`\\n\\nThe flow_to_stock function converts a data set with flow interpretation into a stock interpretation. This transformation\\nis useful when you want to aggregate flow data (e.g., sales or production rates) into cumulative stock data (e.g., total\\ninventory).\\n\\n**Syntax:**\\n\\n`result := flow_to_stock(op)`\\n\\n**Parameters:**\\n\\n- `op` - The input data set with flow interpretation. The data set must have an identifier of type `time`, additional\\n  identifiers, and at least one measure of type `number`.\\n\\n**Result:**\\n\\nThe function returns a data set with the same structure as the input, but with the values converted to stock\\ninterpretation.\\n\\n#### Function `stock_to_flow`\\n\\nThe `stock_to_flow` function converts a data set with stock interpretation into a flow interpretation. This\\ntransformation is useful when you want to derive flow data from cumulative stock data.\\n\\n**Syntax:**\\n\\n`result := stock_to_flow(op)`\\n\\n**Parameters:**\\n\\n- `op` - The input data set with stock interpretation. The data set must have an identifier of type `time`, additional\\n  identifiers, and at least one measure of type `number`.\\n\\n**Result:**\\n\\nThe function returns a data set with the same structure as the input, but with the values converted to flow\\ninterpretation.\\n\\n#### Function `timeshift`\\n\\nThe `timeshift` function shifts the time component of a specified range of time in the data set. This is useful for\\nanalyzing data at different time offsets, such as comparing current values to past values.\\n\\n**Syntax:**\\n\\n`result := timeshift(op, shiftNumber)`\\n\\n**Parameters:**\\n\\n- `op` - The operand data set containing time series.\\n- `shiftNumber` - An integer representing the number of periods to shift. Positive values shift forward in time, while\\n  negative values shift backward.\\n\\n**Result:**\\n\\nThe function returns a data set with the time identifiers shifted by the specified number of periods."},{"id":"/trevas-java-17","metadata":{"permalink":"/Trevas/blog/trevas-java-17","source":"@site/blog/2023-11-22-trevas-java-17.mdx","title":"Trevas - Java 17","description":"News","date":"2023-11-22T00:00:00.000Z","tags":[{"inline":true,"label":"Trevas","permalink":"/Trevas/blog/tags/trevas"}],"readingTime":0.41,"hasTruncateMarker":false,"authors":[{"name":"Nicolas Laval","link":"https://github.com/NicoLaval","title":"Making Sense - Developer","image":"/img/profile_pic_nicolas_laval.jpg","key":"nicolas","page":null}],"frontMatter":{"slug":"/trevas-java-17","title":"Trevas - Java 17","authors":["nicolas"],"tags":["Trevas"]},"unlisted":false,"prevItem":{"title":"Trevas - Temporal operators","permalink":"/Trevas/blog/trevas-temporal-operators"},"nextItem":{"title":"Trevas - Persistent assignments","permalink":"/Trevas/blog/trevas-persistent-assignments"}},"content":"### News\\n\\nTrevas 1.2.0 enables Java 17 support.\\n\\n### Java modules handling\\n\\nSpark does not support Java modules.\\n\\nJava 17 client apps, embedding Trevas in Spark mode have to configure `UNNAMED` modules for Spark.\\n\\n#### Maven\\n\\nAdd to your `pom.xml` file, in the `build > plugins` section:\\n\\n```xml\\n<plugin>\\n    <groupId>org.apache.maven.plugins</groupId>\\n    <artifactId>maven-compiler-plugin</artifactId>\\n    <version>3.11.0</version>\\n    <configuration>\\n        <compilerArgs>\\n            <arg>--add-exports</arg>\\n            <arg>java.base/sun.nio.ch=ALL-UNNAMED</arg>\\n        </compilerArgs>\\n    </configuration>\\n</plugin>\\n```\\n\\n#### Docker\\n\\n```shell\\nENTRYPOINT [\\"java\\", \\"--add-exports\\", \\"java.base/sun.nio.ch=ALL-UNNAMED\\", \\"mainClass\\"]\\n```"},{"id":"/trevas-persistent-assignments","metadata":{"permalink":"/Trevas/blog/trevas-persistent-assignments","source":"@site/blog/2023-11-22-trevas-persistent-assignment.mdx","title":"Trevas - Persistent assignments","description":"News","date":"2023-11-22T00:00:00.000Z","tags":[{"inline":true,"label":"Trevas","permalink":"/Trevas/blog/tags/trevas"}],"readingTime":0.36,"hasTruncateMarker":false,"authors":[{"name":"Nicolas Laval","link":"https://github.com/NicoLaval","title":"Making Sense - Developer","image":"/img/profile_pic_nicolas_laval.jpg","key":"nicolas","page":null}],"frontMatter":{"slug":"/trevas-persistent-assignments","title":"Trevas - Persistent assignments","authors":["nicolas"],"tags":["Trevas"]},"unlisted":false,"prevItem":{"title":"Trevas - Java 17","permalink":"/Trevas/blog/trevas-java-17"},"nextItem":{"title":"Trevas - check_hierarchy","permalink":"/Trevas/blog/trevas-check_hierarchy"}},"content":"### News\\n\\nTrevas 1.2.0 includes the persistent assignment support: `ds1 <- ds;`.\\n\\nIn Trevas, persistent datasets are represented as `PersistentDataset`.\\n\\n### Handle `PersistentDataset`\\n\\nTrevas datasets are represented as `Dataset`.\\n\\nAfter running the Trevas engine, you can use persistent datasets with something like:\\n\\n```\\nBindings engineBindings = engine.getContext().getBindings(ScriptContext.ENGINE_SCOPE);\\nengineBindings.forEach((k, v) -> {\\n    if (v instanceof PersistentDataset) {\\n        fr.insee.vtl.model.Dataset ds = ((PersistentDataset) v).getDelegate();\\n        if (ds instanceof SparkDataset) {\\n            Dataset<Row> sparkDs = ((SparkDataset) ds).getSparkDataset();\\n            // Do what you want with sparkDs\\n        }\\n    }\\n});\\n```"},{"id":"/trevas-check_hierarchy","metadata":{"permalink":"/Trevas/blog/trevas-check_hierarchy","source":"@site/blog/2023-09-01-trevas-check_hierarchy.mdx","title":"Trevas - check_hierarchy","description":"News","date":"2023-09-01T00:00:00.000Z","tags":[{"inline":true,"label":"Trevas","permalink":"/Trevas/blog/tags/trevas"}],"readingTime":1,"hasTruncateMarker":false,"authors":[{"name":"Nicolas Laval","link":"https://github.com/NicoLaval","title":"Making Sense - Developer","image":"/img/profile_pic_nicolas_laval.jpg","key":"nicolas","page":null}],"frontMatter":{"slug":"/trevas-check_hierarchy","title":"Trevas - check_hierarchy","authors":["nicolas"],"tags":["Trevas"]},"unlisted":false,"prevItem":{"title":"Trevas - Persistent assignments","permalink":"/Trevas/blog/trevas-persistent-assignments"},"nextItem":{"title":"Trevas Batch 0.1.1","permalink":"/Trevas/blog/trevas-batch-0.1.1"}},"content":"### News\\n\\nTrevas 1.1.0 includes hierarchical validation via operators `define hierarchical ruleset` and `check_hierarchy`.\\n\\n### Example\\n\\n#### Input\\n\\n`ds1`:\\n\\n| id  | Me  |\\n| :-: | :-: |\\n| ABC | 12  |\\n|  A  |  1  |\\n|  B  | 10  |\\n|  C  |  1  |\\n| DEF | 100 |\\n|  E  | 99  |\\n|  F  |  1  |\\n| HIJ | 100 |\\n|  H  | 99  |\\n|  I  |  0  |\\n\\n#### VTL script\\n\\n```\\n// Ensure ds1 metadata definition is good\\nds1 := ds1[calc identifier id := id, Me := cast(Me, integer)];\\n\\n// Define hierarchical ruleset\\ndefine hierarchical ruleset hr (variable rule Me) is\\n    My_Rule : ABC = A + B + C errorcode \\"ABC is not sum of A,B,C\\" errorlevel 1;\\n    DEF = D + E + F errorcode \\"DEF is not sum of D,E,F\\";\\n    HIJ : HIJ = H + I - J errorcode \\"HIJ is not H + I - J\\" errorlevel 10\\nend hierarchical ruleset;\\n\\n// Check hierarchy\\nds_all := check_hierarchy(ds1, hr rule id all);\\nds_all_measures := check_hierarchy(ds1, hr rule id always_null all_measures);\\nds_invalid := check_hierarchy(ds1, hr rule id always_zero invalid);\\n```\\n\\n#### Outputs\\n\\n- `ds_all`\\n\\n| id  | ruleid  | bool_var | errorcode | errorlevel | imbalance |\\n| :-: | :-----: | :------: | :-------: | :--------: | :-------: |\\n| ABC | My_Rule |   true   |   null    |    null    |     0     |\\n\\n- `ds_always_null_all_measures`\\n\\n| id  | Me  | ruleid  | bool_var | errorcode | errorlevel | imbalance |\\n| :-: | :-: | :-----: | :------: | :-------: | :--------: | :-------: |\\n| ABC | 12  | My_Rule |   true   |   null    |    null    |     0     |\\n| DEF | 100 |  hr_2   |   null   |   null    |    null    |   null    |\\n| HIJ | 100 |   HIJ   |   null   |   null    |    null    |   null    |\\n\\n- `ds_invalid`\\n\\n| id  | Me  | ruleid |      errorcode       | errorlevel | imbalance |\\n| :-: | :-: | :----: | :------------------: | :--------: | :-------: |\\n| HIJ | 100 |  HIJ   | HIJ is not H + I - J |     10     |     1     |"},{"id":"/trevas-batch-0.1.1","metadata":{"permalink":"/Trevas/blog/trevas-batch-0.1.1","source":"@site/blog/2023-07-02-trevas-batch-0.1.1.mdx","title":"Trevas Batch 0.1.1","description":"Trevas Batch 0.1.1 uses version 1.0.2 of Trevas.","date":"2023-07-02T00:00:00.000Z","tags":[{"inline":true,"label":"Trevas Batch","permalink":"/Trevas/blog/tags/trevas-batch"}],"readingTime":0.63,"hasTruncateMarker":false,"authors":[{"name":"Nicolas Laval","link":"https://github.com/NicoLaval","title":"Making Sense - Developer","image":"/img/profile_pic_nicolas_laval.jpg","key":"nicolas","page":null}],"frontMatter":{"slug":"/trevas-batch-0.1.1","title":"Trevas Batch 0.1.1","authors":["nicolas"],"tags":["Trevas Batch"]},"unlisted":false,"prevItem":{"title":"Trevas - check_hierarchy","permalink":"/Trevas/blog/trevas-check_hierarchy"},"nextItem":{"title":"Trevas Jupyter 0.3.2","permalink":"/Trevas/blog/trevas-jupyter-0.3.2"}},"content":"import useBaseUrl from \'@docusaurus/useBaseUrl\';\\nimport Link from \'@theme/Link\';\\n\\n[Trevas Batch](https://github.com/Making-Sense-Info/Trevas-Batch) `0.1.1` uses version `1.0.2` of [Trevas](https://github.com/InseeFr/Trevas).\\n\\nThis Java batch provides Trevas execution metrics in Spark mode.\\n\\nThe configuration file to fill in is described in the [README](https://github.com/Making-Sense-Info/Trevas-Batch/tree/main#readme) of the project.\\nLaunching the batch will produce a Markdown file as output.\\n\\n### Launch\\n\\n#### Local\\n\\n```java\\njava -jar trevas-batch-0.1.1.jar -Dconfig.path=\\"...\\" -Dreport.path=\\"...\\"\\n```\\n\\nThe java execution will be done in local Spark.\\n\\n#### Kubernetes\\n\\nDefault Kubernetes objects are defined in the [.kubernetes](https://github.com/Making-Sense-Info/Trevas-Batch/tree/main/.kubernetes) folder.\\n\\nFeed the `config-map.yml` file then launch the job in your cluster."},{"id":"/trevas-jupyter-0.3.2","metadata":{"permalink":"/Trevas/blog/trevas-jupyter-0.3.2","source":"@site/blog/2023-07-01-v1-trevas-jupyter-0.3.2.mdx","title":"Trevas Jupyter 0.3.2","description":"Trevas Jupyter 0.3.2 uses version 1.0.2 of Trevas.","date":"2023-07-01T00:00:00.000Z","tags":[{"inline":true,"label":"Trevas Jupyter","permalink":"/Trevas/blog/tags/trevas-jupyter"}],"readingTime":0.7,"hasTruncateMarker":false,"authors":[{"name":"Nicolas Laval","link":"https://github.com/NicoLaval","title":"Making Sense - Developer","image":"/img/profile_pic_nicolas_laval.jpg","key":"nicolas","page":null}],"frontMatter":{"slug":"/trevas-jupyter-0.3.2","title":"Trevas Jupyter 0.3.2","authors":["nicolas"],"tags":["Trevas Jupyter"]},"unlisted":false,"prevItem":{"title":"Trevas Batch 0.1.1","permalink":"/Trevas/blog/trevas-batch-0.1.1"},"nextItem":{"title":"Trevas Lab 0.3.3","permalink":"/Trevas/blog/trevas-lab-0.3.3"}},"content":"import useBaseUrl from \'@docusaurus/useBaseUrl\';\\nimport Link from \'@theme/Link\';\\n\\n[Trevas Jupyter](https://github.com/InseeFrLab/Trevas-Jupyter) `0.3.2` uses version `1.0.2` of [Trevas](https://github.com/InseeFr/Trevas).\\n\\n### News\\n\\nIn addition to the <Link label=\\"VTL coverage\\" href={useBaseUrl(\'/user-guide/coverage\')} /> greatly increased since the publication of Trevas 1.x.x, Trevas Jupyter offers 1 new connector:\\n- SAS files (via the `loadSas` method)\\n\\n### Launch\\n\\n#### Manually adding the Trevas Kernel to an existing Jupyter instance\\n\\n- Trevas Jupyter compiler\\n- Copy the `kernel.json` file and the `bin` and `repo` folders to a new kernel folder.\\n- Edit the `kernel.json` file\\n- Launch Jupyter\\n\\n#### Docker\\n\\n```bash\\ndocker pull inseefrlab/trevas-jupyter:0.3.2\\ndocker run -p 8888:8888 inseefrlab/trevas-jupyter:0.3.2\\n```\\n\\n#### Helm\\n\\nThe Trevas Jupyter docker image can be instantiated via the `jupyter-pyspark` Helm contract from [InseeFrLab](https://github.com/InseeFrLab/helm-charts-interactive-services/tree/main)."},{"id":"/trevas-lab-0.3.3","metadata":{"permalink":"/Trevas/blog/trevas-lab-0.3.3","source":"@site/blog/2023-07-01-v1-trevas-lab-0.3.3.mdx","title":"Trevas Lab 0.3.3","description":"Trevas Lab 0.3.3 uses version 1.0.2 of Trevas.","date":"2023-07-01T00:00:00.000Z","tags":[{"inline":true,"label":"Trevas Lab","permalink":"/Trevas/blog/tags/trevas-lab"}],"readingTime":0.48,"hasTruncateMarker":false,"authors":[{"name":"Nicolas Laval","link":"https://github.com/NicoLaval","title":"Making Sense - Developer","image":"/img/profile_pic_nicolas_laval.jpg","key":"nicolas","page":null}],"frontMatter":{"slug":"/trevas-lab-0.3.3","title":"Trevas Lab 0.3.3","authors":["nicolas"],"tags":["Trevas Lab"]},"unlisted":false,"prevItem":{"title":"Trevas Jupyter 0.3.2","permalink":"/Trevas/blog/trevas-jupyter-0.3.2"}},"content":"import useBaseUrl from \'@docusaurus/useBaseUrl\';\\nimport Link from \'@theme/Link\';\\n\\n[Trevas Lab](https://github.com/InseeFrLab/Trevas-Lab) `0.3.3` uses version `1.0.2` of [Trevas](https://github.com/InseeFr/Trevas).\\n\\n### News\\n\\nIn addition to the <Link label=\\"VTL coverage\\" href={useBaseUrl(\'/user-guide/coverage\')} /> greatly increased since the publication of Trevas 1.x.x, Trevas Lab offers 2 new connectors:\\n- SAS files\\n- JDBC MariaDB\\n\\n### Launch\\n\\n#### Kubernetes\\n\\nSample Kubernetes objects are available in the `.kubernetes` folders of [Trevas Lab](https://github.com/InseeFrLab/Trevas-Lab/tree/master/.kubernetes) and [Trevas Lab UI](https://github.com/InseeFrLab/Trevas-Lab-UI/tree/master/.kubernetes)."}]}}')}}]);