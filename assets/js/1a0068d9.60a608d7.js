"use strict";(self.webpackChunktrevas_documentation=self.webpackChunktrevas_documentation||[]).push([[3612],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=l(r),k=a,m=d["".concat(p,".").concat(k)]||d[k]||c[k]||s;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:a,i[1]=o;for(var l=2;l<s;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},4128:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const s={id:"index-spark-mode",title:"Spark mode",sidebar_label:"Overview",slug:"/developer-guide/spark-mode",custom_edit_url:null},i=void 0,o={unversionedId:"developer-guide/spark-mode/index-spark-mode",id:"developer-guide/spark-mode/index-spark-mode",title:"Spark mode",description:"SparkDataset",source:"@site/docs/developer-guide/spark-mode/index-spark-mode.mdx",sourceDirName:"developer-guide/spark-mode",slug:"/developer-guide/spark-mode",permalink:"/Trevas/developer-guide/spark-mode",draft:!1,editUrl:null,tags:[],version:"current",lastUpdatedAt:1705509465,formattedLastUpdatedAt:"Jan 17, 2024",frontMatter:{id:"index-spark-mode",title:"Spark mode",sidebar_label:"Overview",slug:"/developer-guide/spark-mode",custom_edit_url:null},sidebar:"docs",previous:{title:"Others",permalink:"/Trevas/developer-guide/basic-mode/data-sources/others"},next:{title:"Overview",permalink:"/Trevas/developer-guide/spark-mode/data-sources"}},p={},l=[{value:"SparkDataset",id:"sparkdataset",level:3},{value:"Import Trevas Spark module",id:"import-trevas-spark-module",level:3},{value:"Spark session",id:"spark-session",level:3},{value:"Example",id:"example",level:3},{value:"Distributed execution",id:"distributed-execution",level:3},{value:"Execution in a Kubernetes cluster",id:"execution-in-a-kubernetes-cluster",level:3}],u={toc:l};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"sparkdataset"},"SparkDataset"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"SparkDataset")," data sets can represent statistical tables in a Java application using Trevas in Spark mode."),(0,a.kt)("h3",{id:"import-trevas-spark-module"},"Import Trevas Spark module"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>fr.insee.trevas</groupId>\n    <artifactId>vtl-spark</artifactId>\n    <version>1.2.0</version>\n</dependency>\n")),(0,a.kt)("h3",{id:"spark-session"},"Spark session"),(0,a.kt)("p",null,"In order to execute VTL via Trevas in Spark mode, a Spark session must be instantiated."),(0,a.kt)("p",null,"The session can be:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"locale (execution on the Java server)"),(0,a.kt)("li",{parentName:"ul"},"static (execution on a Spark instance installed on a server beforehand)"),(0,a.kt)("li",{parentName:"ul"},"dynamic (dynamic execution on a Kubernetes cluster)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'SparkSession spark = SparkSession.builder().master("local").getOrCreate();\n')),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'ScriptEngine engine = new ScriptEngineManager().getEngineByName("vtl");\n\nBindings bindings = new SimpleBindings();\nSparkDataset dataset = new SparkDataset(spark.read().parquet("folder_path"));\nbindings.put("myDataset", dataset);\n\nengine.getContext().setBindings(bindings, ScriptContext.ENGINE_SCOPE);\nengine.put("$vtl.engine.processing_engine_names", "spark");\nengine.put("$vtl.spark.session", spark);\n\nString script = "res := myDataset[filter var3 > 6];";\n\ntry {\n    engine.eval(script);\n} catch (ScriptException e) {\n    e.printStackTrace();\n}\n\nBindings outputBindings = engine.getContext().getBindings(ScriptContext.ENGINE_SCOPE);\nSparkDataset result = (SparkDataset) outputBindings.get("res");\n// Ensure direct resolution because of spark lazy mechanism (performance warning!)\nInMemoryDataset imResult = new InMemoryDataset(\n                        result.getDataPoints(),\n                        result.getDataStructure()\n                    );\n')),(0,a.kt)("h3",{id:"distributed-execution"},"Distributed execution"),(0,a.kt)("p",null,"Whether in static or dynamic mode, the distributed execution of the treatments requires that the executors instantiated by the master be able to solve the VTL processing."),(0,a.kt)("p",null,"It is thus necessary to provide the Trevas jars to the executors via the ",(0,a.kt)("inlineCode",{parentName:"p"},"spark.jars")," option of the ",(0,a.kt)("inlineCode",{parentName:"p"},"SparkConf")," object:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'SparkSession.Builder sparkBuilder = SparkSession.builder()\nSparkConf conf = new SparkConf();\nconf.set("spark.jars", String.join(",",\n                    "/vtl-spark.jar",\n                    "/vtl-model.jar",\n                    "/vtl-parser.jar",\n                    "/vtl-engine.jar",\n            ));\nsparkBuilder.config(conf);\n...\nSparkSession spark = sparkBuilder.getOrCreate();\n')),(0,a.kt)("h3",{id:"execution-in-a-kubernetes-cluster"},"Execution in a Kubernetes cluster"),(0,a.kt)("p",null,"Many options are detailed in the ",(0,a.kt)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/running-on-kubernetes.html#docker-images"},"official documentation")),(0,a.kt)("p",null,"Among these, one option is particularly important: the Docker image that will allow executors to resolve VTL processing."),(0,a.kt)("p",null,"A custom image is available ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/InseeFrLab/Trevas-Spark-Hadoop"},"here"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'SparkSession.Builder sparkBuilder = SparkSession.builder()\nSparkConf conf = new SparkConf();\nconf.set("spark.kubernetes.container.image", "inseefrlab/spark-hadoop:trevas-0.4.7-spark-3.2.1-hadoop-3.3.1-postgresql-42.3.3-postgis-2021.1.0");\nconf.set("spark.kubernetes.container.pullPolicy", "IfNotPresent");\nsparkBuilder.config(conf);\nsparkBuilder.master("k8s://...")\n...\nSparkSession spark = sparkBuilder.getOrCreate();\n')))}d.isMDXComponent=!0}}]);