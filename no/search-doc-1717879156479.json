[{"title":"Trevas Batch 0.1.1","type":0,"sectionRef":"#","url":"/Trevas/no/blog/trevas-batch-0.1.1","content":"","keywords":"","version":null},{"title":"Launch​","type":1,"pageTitle":"Trevas Batch 0.1.1","url":"/Trevas/no/blog/trevas-batch-0.1.1#launch","content":"Local​ java -jar trevas-batch-0.1.1.jar -Dconfig.path=&quot;...&quot; -Dreport.path=&quot;...&quot;  The java execution will be done in local Spark. Kubernetes​ Default Kubernetes objects are defined in the .kubernetes folder. Feed the config-map.yml file then launch the job in your cluster. ","version":null,"tagName":"h3"},{"title":"Trevas - Java 17","type":0,"sectionRef":"#","url":"/Trevas/no/blog/trevas-java-17","content":"","keywords":"","version":null},{"title":"News​","type":1,"pageTitle":"Trevas - Java 17","url":"/Trevas/no/blog/trevas-java-17#news","content":"Trevas 1.2.0 enables Java 17 support. ","version":null,"tagName":"h3"},{"title":"Java modules handling​","type":1,"pageTitle":"Trevas - Java 17","url":"/Trevas/no/blog/trevas-java-17#java-modules-handling","content":"Spark does not support Java modules. Java 17 client apps, embedding Trevas in Spark mode have to configure UNNAMED modules for Spark. Maven​ Add to your pom.xml file, in the build &gt; plugins section: &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;version&gt;3.11.0&lt;/version&gt; &lt;configuration&gt; &lt;compilerArgs&gt; &lt;arg&gt;--add-exports&lt;/arg&gt; &lt;arg&gt;java.base/sun.nio.ch=ALL-UNNAMED&lt;/arg&gt; &lt;/compilerArgs&gt; &lt;/configuration&gt; &lt;/plugin&gt;  Docker​ ENTRYPOINT [&quot;java&quot;, &quot;--add-exports&quot;, &quot;java.base/sun.nio.ch=ALL-UNNAMED&quot;, &quot;mainClass&quot;]  ","version":null,"tagName":"h3"},{"title":"Trevas - check_hierarchy","type":0,"sectionRef":"#","url":"/Trevas/no/blog/trevas-check_hierarchy","content":"","keywords":"","version":null},{"title":"News​","type":1,"pageTitle":"Trevas - check_hierarchy","url":"/Trevas/no/blog/trevas-check_hierarchy#news","content":"Trevas 1.1.0 includes hierarchical validation via operators define hierarchical ruleset and check_hierarchy. ","version":null,"tagName":"h3"},{"title":"Example​","type":1,"pageTitle":"Trevas - check_hierarchy","url":"/Trevas/no/blog/trevas-check_hierarchy#example","content":"Input​ ds1: id\tMeABC\t12 A\t1 B\t10 C\t1 DEF\t100 E\t99 F\t1 HIJ\t100 H\t99 I\t0 VTL script​ // Ensure ds1 metadata definition is good ds1 := ds1[calc identifier id := id, Me := cast(Me, integer)]; // Define hierarchical ruleset define hierarchical ruleset hr (variable rule Me) is My_Rule : ABC = A + B + C errorcode &quot;ABC is not sum of A,B,C&quot; errorlevel 1; DEF = D + E + F errorcode &quot;DEF is not sum of D,E,F&quot;; HIJ : HIJ = H + I - J errorcode &quot;HIJ is not H + I - J&quot; errorlevel 10 end hierarchical ruleset; // Check hierarchy ds_all := check_hierarchy(ds1, hr rule id all); ds_all_measures := check_hierarchy(ds1, hr rule id always_null all_measures); ds_invalid := check_hierarchy(ds1, hr rule id always_zero invalid);  Outputs​ ds_all id\truleid\tbool_var\terrorcode\terrorlevel\timbalanceABC\tMy_Rule\ttrue\tnull\tnull\t0 ds_always_null_all_measures id\tMe\truleid\tbool_var\terrorcode\terrorlevel\timbalanceABC\t12\tMy_Rule\ttrue\tnull\tnull\t0 DEF\t100\thr_2\tnull\tnull\tnull\tnull HIJ\t100\tHIJ\tnull\tnull\tnull\tnull ds_invalid id\tMe\truleid\terrorcode\terrorlevel\timbalanceHIJ\t100\tHIJ\tHIJ is not H + I - J\t10\t1 ","version":null,"tagName":"h3"},{"title":"Trevas Lab 0.3.3","type":0,"sectionRef":"#","url":"/Trevas/no/blog/trevas-lab-0.3.3","content":"","keywords":"","version":null},{"title":"News​","type":1,"pageTitle":"Trevas Lab 0.3.3","url":"/Trevas/no/blog/trevas-lab-0.3.3#news","content":"In addition to the VTL coverage greatly increased since the publication of Trevas 1.x.x, Trevas Lab offers 2 new connectors: SAS filesJDBC MariaDB ","version":null,"tagName":"h3"},{"title":"Launch​","type":1,"pageTitle":"Trevas Lab 0.3.3","url":"/Trevas/no/blog/trevas-lab-0.3.3#launch","content":"Kubernetes​ Sample Kubernetes objects are available in the .kubernetes folders of Trevas Lab and Trevas Lab UI. ","version":null,"tagName":"h3"},{"title":"Trevas Jupyter 0.3.2","type":0,"sectionRef":"#","url":"/Trevas/no/blog/trevas-jupyter-0.3.2","content":"","keywords":"","version":null},{"title":"News​","type":1,"pageTitle":"Trevas Jupyter 0.3.2","url":"/Trevas/no/blog/trevas-jupyter-0.3.2#news","content":"In addition to the VTL coverage greatly increased since the publication of Trevas 1.x.x, Trevas Jupyter offers 1 new connector: SAS files (via the loadSas method) ","version":null,"tagName":"h3"},{"title":"Launch​","type":1,"pageTitle":"Trevas Jupyter 0.3.2","url":"/Trevas/no/blog/trevas-jupyter-0.3.2#launch","content":"Manually adding the Trevas Kernel to an existing Jupyter instance​ Trevas Jupyter compilerCopy the kernel.json file and the bin and repo folders to a new kernel folder.Edit the kernel.json fileLaunch Jupyter Docker​ docker pull inseefrlab/trevas-jupyter:0.3.2 docker run -p 8888:8888 inseefrlab/trevas-jupyter:0.3.2  Helm​ The Trevas Jupyter docker image can be instantiated via the jupyter-pyspark Helm contract from InseeFrLab. ","version":null,"tagName":"h3"},{"title":"Trevas - Temporal operators","type":0,"sectionRef":"#","url":"/Trevas/no/blog/trevas-temporal-operators","content":"","keywords":"","version":null},{"title":"Temporal operators in Trevas​","type":1,"pageTitle":"Trevas - Temporal operators","url":"/Trevas/no/blog/trevas-temporal-operators#temporal-operators-in-trevas","content":"The version 1.4.0 of Trevas introduces preliminary support for date and time types and operators. The specification describes temporal types such as date, time_period, time, and duration. However, Trevas authors find these descriptions unsatisfactory. This blog post outlines our implementation choices and how they differ from the spec. In the specification, time_period (and the types date) is described as a compound type with a start and end (or a start and a duration). This complicates the implementation and brings little value to the language as one can simply operate on a combination of dates or date and duration directly. For this reason, we defined an algebra between the temporal types and did not yet implement the time_period. result (operators)\tdate\tduration\tnumberdate\tn/a\tdate (+, -)\tn/a duration\tdate (+, -)\tduration (+, -)\tduration (*) number\tn/a\tduration (*)\tn/a The period_indicator function relies on period-awareness for types that are not defined enough at the moment to be implemented. Java mapping​ The VTL type date is represented internally as the types java.time.Instant,java.time.ZonedDateTimeand java.time.OffsetDateTime Instant represent a specific moment in time. Note that this type does not include timezone information and is therefore not usable with all the operators. One can use the types ZonedDateTime and OffsetDateTime when timezone or time saving is required. The VTL type duration is represented internally as the type org.threeten.extra.PeriodDurationfrom the threeten extra package. It represents a duration using both calendar units (years, months, days) and a temporal amount (hours, minutes, seconds and nanoseconds). Function flow_to_stock​ The flow_to_stock function converts a data set with flow interpretation into a stock interpretation. This transformation is useful when you want to aggregate flow data (e.g., sales or production rates) into cumulative stock data (e.g., total inventory). Syntax: result := flow_to_stock(op) Parameters: op - The input data set with flow interpretation. The data set must have an identifier of type time, additional identifiers, and at least one measure of type number. Result: The function returns a data set with the same structure as the input, but with the values converted to stock interpretation. Function stock_to_flow​ The stock_to_flow function converts a data set with stock interpretation into a flow interpretation. This transformation is useful when you want to derive flow data from cumulative stock data. Syntax: result := stock_to_flow(op) Parameters: op - The input data set with stock interpretation. The data set must have an identifier of type time, additional identifiers, and at least one measure of type number. Result: The function returns a data set with the same structure as the input, but with the values converted to flow interpretation. Function timeshift​ The timeshift function shifts the time component of a specified range of time in the data set. This is useful for analyzing data at different time offsets, such as comparing current values to past values. Syntax: result := timeshift(op, shiftNumber) Parameters: op - The operand data set containing time series.shiftNumber - An integer representing the number of periods to shift. Positive values shift forward in time, while negative values shift backward. Result: The function returns a data set with the time identifiers shifted by the specified number of periods. ","version":null,"tagName":"h3"},{"title":"Trevas - Persistent assignments","type":0,"sectionRef":"#","url":"/Trevas/no/blog/trevas-persistent-assignments","content":"","keywords":"","version":null},{"title":"News​","type":1,"pageTitle":"Trevas - Persistent assignments","url":"/Trevas/no/blog/trevas-persistent-assignments#news","content":"Trevas 1.2.0 includes the persistent assignment support: ds1 &lt;- ds;. In Trevas, persistent datasets are represented as PersistentDataset. ","version":null,"tagName":"h3"},{"title":"Handle PersistentDataset​","type":1,"pageTitle":"Trevas - Persistent assignments","url":"/Trevas/no/blog/trevas-persistent-assignments#handle-persistentdataset","content":"Trevas datasets are represented as Dataset. After running the Trevas engine, you can use persistent datasets with something like: Bindings engineBindings = engine.getContext().getBindings(ScriptContext.ENGINE_SCOPE); engineBindings.forEach((k, v) -&gt; { if (v instanceof PersistentDataset) { fr.insee.vtl.model.Dataset ds = ((PersistentDataset) v).getDelegate(); if (ds instanceof SparkDataset) { Dataset&lt;Row&gt; sparkDs = ((SparkDataset) ds).getSparkDataset(); // Do what you want with sparkDs } } });  ","version":null,"tagName":"h3"},{"title":"Modifikasjoner av VTL-grammatikk","type":0,"sectionRef":"#","url":"/Trevas/no/administrator-guide/grammar","content":"","keywords":"","version":"Neste"},{"title":"Bruke VTL-grammatikken​","type":1,"pageTitle":"Modifikasjoner av VTL-grammatikk","url":"/Trevas/no/administrator-guide/grammar#bruke-vtl-grammatikken","content":"Trevas er avhengig av den formelle grammatikken til VTL uttrykt som EBNF. La référence est l'upgrade de la version 2.0 publiée en juillet 2020 sur le site web SDMX. Grammatikken består av to filer klare til å bli behandlet av Antlr parsergeneratoren : VtlTokens.g4 inneholder listen over gyldige VTL-termer. Vtl.g4 inneholder regler som lager gyldige VTL-uttrykk. Antlr bruker disse filene til å produsere en lexer, som lager en liste over ordforrådssymboler fra en input-tegnstrøm, og en parser, som lager den grammatiske strukturen som tilsvarer denne listen over symboler. Antlr kan generere parsere som kan brukes på forskjellige målspråk. Trevas bruker parseren for Java, som er eksponert i vtl-parser modulen. ","version":"Neste","tagName":"h2"},{"title":"Grammatikktilpasninger​","type":1,"pageTitle":"Modifikasjoner av VTL-grammatikk","url":"/Trevas/no/administrator-guide/grammar#grammatikktilpasninger","content":"For å forbedre ytelsen og funksjonaliteten er det gjort mindre endringer i VTL-grammatikken som brukes i Trevas. Forenkling av det grammatiske treet​ Som dokumentert her og her, expr og exprComp grenene til grammatikktreet er nesten identiske. For å unngå å måtte implementere den samme logikken to ganger, ble exprComp grenen kommentert ut av commit 498c1f8. Det ble senere lagt merke til at denne modifikasjonen feilaktig ugyldiggjorde COUNT() uttrykket, og den tilsvarende regelen ble derfor gjeninnført i grammatikken av commit 54f86f2. Tilsetting av avstandsoperatører​ Avstandsoperatører som Levenshtein eller Jaro-Winkler brukes ofte i strengtesting. For å tillate dem i VTL-uttrykk, commit 036dc60 lagt til en del i grammatikken distanceOperators som inneholder en LEVENSHTEIN regel, samt LEVENSHTEIN symbolet i lexer-filen. ","version":"Neste","tagName":"h3"},{"title":"Utviklerveiledning","type":0,"sectionRef":"#","url":"/Trevas/no/developer-guide","content":"","keywords":"","version":"Neste"},{"title":"Importer Trevas motoren​","type":1,"pageTitle":"Utviklerveiledning","url":"/Trevas/no/developer-guide#importer-trevas-motoren","content":"&lt;dependency&gt; &lt;groupId&gt;fr.insee.trevas&lt;/groupId&gt; &lt;artifactId&gt;vtl-engine&lt;/artifactId&gt; &lt;version&gt;1.4.0&lt;/version&gt; &lt;/dependency&gt;  ","version":"Neste","tagName":"h3"},{"title":"Instantier Trevas motoren​","type":1,"pageTitle":"Utviklerveiledning","url":"/Trevas/no/developer-guide#instantier-trevas-motoren","content":"// Start engine ScriptEngine engine = new ScriptEngineManager().getEngineByName(&quot;vtl&quot;); // Add input bindings to engine Bindings bindings = new SimpleBindings(); bindings.put(&quot;a&quot;, 1); engine.setBindings(b, ScriptContext.ENGINE_SCOPE); // Execute script try { engine.eval(&quot;b := a + 1;&quot;); } catch (VtlScriptException e) { logger.warn(&quot;Eval failed: &quot;, e); } // Get result Long result = (Long) engine.getBindings(ScriptContext.ENGINE_SCOPE).get(&quot;b&quot;);  ","version":"Neste","tagName":"h3"},{"title":"Utførelsesmodus​","type":1,"pageTitle":"Utviklerveiledning","url":"/Trevas/no/developer-guide#utførelsesmodus","content":"Grunnleggende mote Spark modus ","version":"Neste","tagName":"h3"},{"title":"Grunnleggende modus","type":0,"sectionRef":"#","url":"/Trevas/no/developer-guide/basic-mode","content":"","keywords":"","version":"Neste"},{"title":"InMemoryDataset​","type":1,"pageTitle":"Grunnleggende modus","url":"/Trevas/no/developer-guide/basic-mode#inmemorydataset","content":"InMemoryDataset datasett brukes til å representere statistiske tabeller i en Java-applikasjon. ","version":"Neste","tagName":"h3"},{"title":"Eksempel​","type":1,"pageTitle":"Grunnleggende modus","url":"/Trevas/no/developer-guide/basic-mode#eksempel","content":"ScriptEngine engine = new ScriptEngineManager().getEngineByName(&quot;vtl&quot;); Bindings bindings = new SimpleBindings(); InMemoryDataset dataset = new InMemoryDataset( List.of( Map.of(&quot;var1&quot;, &quot;x&quot;, &quot;var2&quot;, &quot;y&quot;, &quot;var3&quot;, 5), Map.of(&quot;var1&quot;, &quot;xx&quot;, &quot;var2&quot;, &quot;yy&quot;, &quot;var3&quot;, 10) ), Map.of(&quot;var1&quot;, String.class, &quot;var2&quot;, String.class, &quot;var3&quot;, Long.class), Map.of(&quot;var1&quot;, Role.IDENTIFIER, &quot;var2&quot;, Role.ATTRIBUTE, &quot;var3&quot;, Role.MEASURE) ); bindings.put(&quot;myDataset&quot;, dataset); engine.getContext().setBindings(bindings, ScriptContext.ENGINE_SCOPE); String script = &quot;res := myDataset[filter var3 &gt; 6];&quot;; try { engine.eval(script); } catch (ScriptException e) { e.printStackTrace(); } Bindings outputBindings = engine.getContext().getBindings(ScriptContext.ENGINE_SCOPE); InMemoryDataset result = (InMemoryDataset) outputBindings.get(&quot;res&quot;); System.out.println(result.getDataPoints().size()); // 1  ","version":"Neste","tagName":"h3"},{"title":"Trevas - SDMX","type":0,"sectionRef":"#","url":"/Trevas/no/blog/trevas-sdmx","content":"","keywords":"","version":null},{"title":"News​","type":1,"pageTitle":"Trevas - SDMX","url":"/Trevas/no/blog/trevas-sdmx#news","content":"Trevas 1.4.0 introduces the VTL SDMX module. This module enables to consume SDMX metadata sources to instantiate Trevas DataStructures and Datasets. It also allows to execute the VTL TransformationSchemes to obtain the resulting persistent datasets. Overview​  Trevas supports the above SDMX message elements. Only the VtlMappingSchemes attribute is optional. The elements in box 1 are used to produce Trevas DataStructures, filling VTL components attributes name, role, type, nullable and valuedomain. The elements in box 2 are used to generate the VTL code (rulesets &amp; transformations). Tools available​ buildStructureFromSDMX3 utility​ TrevasSDMXUtils.buildStructureFromSDMX3 allows to obtain a Trevas DataStructure. Providing corresponding data, you can build a Trevas Dataset. Structured.DataStructure structure = TrevasSDMXUtils.buildStructureFromSDMX3(&quot;path/sdmx_file.xml&quot;, &quot;STRUCT_ID&quot;); SparkDataset ds = new SparkDataset( spark.read() .option(&quot;header&quot;, &quot;true&quot;) .option(&quot;delimiter&quot;, &quot;;&quot;) .option(&quot;quote&quot;, &quot;\\&quot;&quot;) .csv(&quot;path&quot;), structure );  SDMXVTLWorkflow object​ The SDMXVTLWorkflow constructor takes 3 arguments: a ScriptEngine (Trevas or another)a ReadableDataLocation to handle an SDMX messagea map of names / Datasets SparkSession.builder() .appName(&quot;test&quot;) .master(&quot;local&quot;) .getOrCreate(); ScriptEngineManager mgr = new ScriptEngineManager(); ScriptEngine engine = mgr.getEngineByExtension(&quot;vtl&quot;); engine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, &quot;spark&quot;); ReadableDataLocation rdl = new ReadableDataLocationTmp(&quot;src/test/resources/DSD_BPE_CENSUS.xml&quot;); SDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());  This object then allows you to activate the following 3 functions. SDMXVTLWorkflow run function - Preview mode​ The run function can easily be called in a preview mode, without attached data. ScriptEngineManager mgr = new ScriptEngineManager(); ScriptEngine engine = mgr.getEngineByExtension(&quot;vtl&quot;); engine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, &quot;spark&quot;); ReadableDataLocation rdl = new ReadableDataLocationTmp(&quot;src/test/resources/DSD_BPE_CENSUS.xml&quot;); SDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of()); // instead of using TrevasSDMXUtils.buildStructureFromSDMX3 and data sources // to build Trevas Datasets, sdmxVtlWorkflow.getEmptyDatasets() // will handle SDMX message structures to produce Trevas Datasets // with metadata defined in this message, and adding empty data Map&lt;String, Dataset&gt; emptyDatasets = sdmxVtlWorkflow.getEmptyDatasets(); engine.getBindings(ScriptContext.ENGINE_SCOPE).putAll(emptyDatasets); Map&lt;String, PersistentDataset&gt; result = sdmxVtlWorkflow.run();  The preview mode allows to check the conformity of the SDMX file and the metadata of the output datasets. SDMXVTLWorkflow run function​ Once an SDMXVTLWorkflow is built, it is easy to run the VTL validations and transformations defined in the SDMX file. Structured.DataStructure structure = TrevasSDMXUtils.buildStructureFromSDMX3(&quot;path/sdmx_file.xml&quot;, &quot;ds1&quot;); SparkDataset ds1 = new SparkDataset( spark.read() .option(&quot;header&quot;, &quot;true&quot;) .option(&quot;delimiter&quot;, &quot;;&quot;) .option(&quot;quote&quot;, &quot;\\&quot;&quot;) .csv(&quot;path/data.csv&quot;), structure ); ScriptEngineManager mgr = new ScriptEngineManager(); ScriptEngine engine = mgr.getEngineByExtension(&quot;vtl&quot;); engine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, &quot;spark&quot;); Map&lt;String, Dataset&gt; inputs = Map.of(&quot;ds1&quot;, ds1); ReadableDataLocation rdl = new ReadableDataLocationTmp(&quot;path/sdmx_file.xml&quot;); SDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, inputs); Map&lt;String, PersistentDataset&gt; bindings = sdmxVtlWorkflow.run();  As a result, one will receive all the dataset defined as persistent in the TransformationSchemes definition. SDMXVTLWorkflow getTransformationsVTL function​ Gets the VTL code corresponding to the SDMX TransformationSchemes definition. SDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of()); String vtl = sdmxVtlWorkflow.getTransformationsVTL();  SDMXVTLWorkflow getRulesetsVTL function​ Gets the VTL code corresponding to the SDMX TransformationSchemes definition. SDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of()); String dprs = sdmxVtlWorkflow.getRulesetsVTL();  ","version":null,"tagName":"h3"},{"title":"Grunnleggende modus - Datakilder","type":0,"sectionRef":"#","url":"/Trevas/no/developer-guide/basic-mode/data-sources","content":"","keywords":"","version":"Neste"},{"title":"Beste praksis Trevas​","type":1,"pageTitle":"Grunnleggende modus - Datakilder","url":"/Trevas/no/developer-guide/basic-mode/data-sources#beste-praksis-trevas","content":"JSON format er den eneste måten å lagre og administrere VTL-metadata når Trevas-motoren instansieres i basismodus. Det anbefales derfor sterkt å bruke dette formatet. JDBC JSON Andre ","version":"Neste","tagName":"h3"},{"title":"Grunnleggende modus - JSON-kilde","type":0,"sectionRef":"#","url":"/Trevas/no/developer-guide/basic-mode/data-sources/json","content":"","keywords":"","version":"Neste"},{"title":"Importer jackson-modul fra Trevas​","type":1,"pageTitle":"Grunnleggende modus - JSON-kilde","url":"/Trevas/no/developer-guide/basic-mode/data-sources/json#importer-jackson-modul-fra-trevas","content":"&lt;dependency&gt; &lt;groupId&gt;fr.insee.trevas&lt;/groupId&gt; &lt;artifactId&gt;vtl-jackson&lt;/artifactId&gt; &lt;version&gt;1.4.0&lt;/version&gt; &lt;/dependency&gt;  ","version":"Neste","tagName":"h3"},{"title":"Schéma​","type":1,"pageTitle":"Grunnleggende modus - JSON-kilde","url":"/Trevas/no/developer-guide/basic-mode/data-sources/json#schéma","content":"JSON-representasjonen av et Datasett er definert som : { &quot;dataStructure&quot;: [ { &quot;name&quot;: &quot;id&quot;, &quot;type&quot;: &quot;STRING&quot;, &quot;role&quot;: &quot;IDENTIFIER&quot; }, { &quot;name&quot;: &quot;x&quot;, &quot;type&quot;: &quot;INTEGER&quot;, &quot;role&quot;: &quot;MEASURE&quot; }, { &quot;name&quot;: &quot;y&quot;, &quot;type&quot;: &quot;FLOAT&quot;, &quot;role&quot;: &quot;MEASURE&quot; } ], &quot;dataPoints&quot;: [ [&quot;0001&quot;, 10, 50.5], [&quot;0002&quot;, 20, -8], [&quot;0003&quot;, 1000, 0], [&quot;0004&quot;, 1, 4.5] ] }  ","version":"Neste","tagName":"h3"},{"title":"Bruke vtl-jackson modulen​","type":1,"pageTitle":"Grunnleggende modus - JSON-kilde","url":"/Trevas/no/developer-guide/basic-mode/data-sources/json#bruke-vtl-jackson-modulen","content":"Global uttalelse​ Modulen kan deklareres globalt på klientprosjektnivå. public ObjectMapper objectMapper() { return new ObjectMapper() .registerModule(new TrevasModule()); }  Eksempel på deserialisering​ ObjectMapper objectMapper = new ObjectMapper(); objectMapper.readValue(json, Dataset.class);  ","version":"Neste","tagName":"h3"},{"title":"SPark modus - Datakilder","type":0,"sectionRef":"#","url":"/Trevas/no/developer-guide/spark-mode/data-sources","content":"","keywords":"","version":"Neste"},{"title":"Beste praksis Trevas​","type":1,"pageTitle":"SPark modus - Datakilder","url":"/Trevas/no/developer-guide/spark-mode/data-sources#beste-praksis-trevas","content":"Apache Parquetformat er den eneste måten å lagre og administrere VTL-metadata når Trevas-motoren instansieres i Spark-modus. Det anbefales derfor sterkt å bruke dette formatet. ","version":"Neste","tagName":"h3"},{"title":"Eksempler​","type":1,"pageTitle":"SPark modus - Datakilder","url":"/Trevas/no/developer-guide/spark-mode/data-sources#eksempler","content":"Apache Parquet CSV JDBC Andre ","version":"Neste","tagName":"h3"},{"title":"Grunnleggende modus - JDBC-kilde","type":0,"sectionRef":"#","url":"/Trevas/no/developer-guide/basic-mode/data-sources/jdbc","content":"","keywords":"","version":"Neste"},{"title":"Importer JDBC-modul fra Trevas​","type":1,"pageTitle":"Grunnleggende modus - JDBC-kilde","url":"/Trevas/no/developer-guide/basic-mode/data-sources/jdbc#importer-jdbc-modul-fra-trevas","content":"&lt;dependency&gt; &lt;groupId&gt;fr.insee.trevas&lt;/groupId&gt; &lt;artifactId&gt;vtl-jdbc&lt;/artifactId&gt; &lt;version&gt;1.4.0&lt;/version&gt; &lt;/dependency&gt;  ","version":"Neste","tagName":"h3"},{"title":"Bruke vtl-jdbc modulen​","type":1,"pageTitle":"Grunnleggende modus - JDBC-kilde","url":"/Trevas/no/developer-guide/basic-mode/data-sources/jdbc#bruke-vtl-jdbc-modulen","content":"connection = DriverManager.getConnection(...); Statement statement = connection.createStatement(); JDBCDataset jdbcDataset = new JDBCDataset(() -&gt; { try { return statement.executeQuery(&quot;select * from ds1;&quot;); } catch (SQLException se) { throw new RuntimeException(se); } });  ","version":"Neste","tagName":"h3"},{"title":"Grunnleggende modus - Andre kilder","type":0,"sectionRef":"#","url":"/Trevas/no/developer-guide/basic-mode/data-sources/others","content":"","keywords":"","version":"Neste"},{"title":"InMemoryDataset bygger​","type":1,"pageTitle":"Grunnleggende modus - Andre kilder","url":"/Trevas/no/developer-guide/basic-mode/data-sources/others#inmemorydataset-bygger","content":"InMemoryDataset dataset = new InMemoryDataset( List.of( Map.of(&quot;var1&quot;, &quot;x&quot;, &quot;var2&quot;, &quot;y&quot;, &quot;var3&quot;, 5), Map.of(&quot;var1&quot;, &quot;xx&quot;, &quot;var2&quot;, &quot;yy&quot;, &quot;var3&quot;, 10) ), Map.of(&quot;var1&quot;, String.class, &quot;var2&quot;, String.class, &quot;var3&quot;, Long.class), Map.of(&quot;var1&quot;, Role.IDENTIFIER, &quot;var2&quot;, Role.ATTRIBUTE, &quot;var3&quot;, Role.MEASURE) );  ","version":"Neste","tagName":"h3"},{"title":"Spark modus - CSV-kilde","type":0,"sectionRef":"#","url":"/Trevas/no/developer-guide/spark-mode/data-sources/csv","content":"","keywords":"","version":"Neste"},{"title":"Lesning​","type":1,"pageTitle":"Spark modus - CSV-kilde","url":"/Trevas/no/developer-guide/spark-mode/data-sources/csv#lesning","content":"Dataset&lt;Row&gt; sparkDataset = spark.read() .option(&quot;delimiter&quot;, &quot;;&quot;) .option(&quot;header&quot;, &quot;true&quot;) .csv(&quot;folder_path&quot;); SparkDataset dataset = new SparkDataset(sparkDataset);  Se alle støttede alternativer i den offisielle dokumentasjonen. ","version":"Neste","tagName":"h3"},{"title":"Skriving​","type":1,"pageTitle":"Spark modus - CSV-kilde","url":"/Trevas/no/developer-guide/spark-mode/data-sources/csv#skriving","content":"CSV-format anbefales ikke for å skrive Trevas Dataset (se her) ","version":"Neste","tagName":"h3"},{"title":"Spark modus - Andre kilder","type":0,"sectionRef":"#","url":"/Trevas/no/developer-guide/spark-mode/data-sources/others","content":"","keywords":"","version":"Neste"},{"title":"SparkDataset bygger​","type":1,"pageTitle":"Spark modus - Andre kilder","url":"/Trevas/no/developer-guide/spark-mode/data-sources/others#sparkdataset-bygger","content":"StructType schema = DataTypes.createStructType(List.of( DataTypes.createStructField(&quot;string&quot;, DataTypes.StringType, false), DataTypes.createStructField(&quot;integer&quot;, DataTypes.LongType, false), DataTypes.createStructField(&quot;boolean&quot;, DataTypes.BooleanType, false), DataTypes.createStructField(&quot;float&quot;, DataTypes.DoubleType, false) )); Dataset&lt;Row&gt; dataFrame = spark.createDataFrame(List.of( RowFactory.create(&quot;string&quot;, 1L, true, 1.5D) ), schema); fr.insee.vtl.model.Dataset sparkDataset = new SparkDataset(dataFrame);  ","version":"Neste","tagName":"h3"},{"title":"Andre formater som støttes av Spark​","type":1,"pageTitle":"Spark modus - Andre kilder","url":"/Trevas/no/developer-guide/spark-mode/data-sources/others#andre-formater-som-støttes-av-spark","content":"Se den offisielle dokumentasjonen ","version":"Neste","tagName":"h3"},{"title":"Spark modus - JDBC-kilde","type":0,"sectionRef":"#","url":"/Trevas/no/developer-guide/spark-mode/data-sources/jdbc","content":"","keywords":"","version":"Neste"},{"title":"Lesning​","type":1,"pageTitle":"Spark modus - JDBC-kilde","url":"/Trevas/no/developer-guide/spark-mode/data-sources/jdbc#lesning","content":"Dataset&lt;Row&gt; sparkDataset = spark.read() .format(&quot;jdbc&quot;) .option(&quot;url&quot;, &quot;myUrl&quot;) .option(&quot;user&quot;, &quot;myUser&quot;) .option(&quot;password&quot;, &quot;myPwd&quot;) .option(&quot;query&quot;, &quot;myQuery&quot;) .option(&quot;driver&quot;, &quot;org.postgresql.Driver&quot;) .load(); SparkDataset dataset = new SparkDataset(sparkDataset);  I dette eksemplet må prosjektet inneholde postgresql-driveravhengigheten &lt;dependency&gt; &lt;groupId&gt;org.postgresql&lt;/groupId&gt; &lt;artifactId&gt;postgresql&lt;/artifactId&gt; &lt;version&gt;42.5.1&lt;/version&gt; &lt;/dependency&gt;  Se alle støttede alternativer i den offisielle dokumentasjonen. ","version":"Neste","tagName":"h3"},{"title":"Skriving​","type":1,"pageTitle":"Spark modus - JDBC-kilde","url":"/Trevas/no/developer-guide/spark-mode/data-sources/jdbc#skriving","content":"JDBC-formatet anbefales ikke for å skrive Dataset Trevas (se her) ","version":"Neste","tagName":"h3"},{"title":"Trevas moduler","type":0,"sectionRef":"#","url":"/Trevas/no/modules","content":"Trevas moduler VTL Engine Runtime-motor og dens grunnleggende Java-implementering VTL Parser Parser generert av Antlr fra VTL 2.0 formell grammatikk VTL Spark Utføre VTL-transformasjoner av Spark VTL Model Modell som definerer objektene som brukes i motoren VTL JDBC Bruke SQL-datakilder VTL Jackson JSON-serialisering / deserialisering av datasett VTL CSV Tools for the use of CSV data sources VTL SDMX Tools for the use of SDMX metadata","keywords":"","version":"Neste"},{"title":"Spark modus","type":0,"sectionRef":"#","url":"/Trevas/no/developer-guide/spark-mode","content":"","keywords":"","version":"Neste"},{"title":"SparkDataset​","type":1,"pageTitle":"Spark modus","url":"/Trevas/no/developer-guide/spark-mode#sparkdataset","content":"SparkDataset datasett brukes til å representere statistiske tabeller i en Java-applikasjon som bruker Trevas i Spark-modus. ","version":"Neste","tagName":"h3"},{"title":"Importer Spark-modul fra Trevas​","type":1,"pageTitle":"Spark modus","url":"/Trevas/no/developer-guide/spark-mode#importer-spark-modul-fra-trevas","content":"&lt;dependency&gt; &lt;groupId&gt;fr.insee.trevas&lt;/groupId&gt; &lt;artifactId&gt;vtl-spark&lt;/artifactId&gt; &lt;version&gt;1.4.0&lt;/version&gt; &lt;/dependency&gt;  ","version":"Neste","tagName":"h3"},{"title":"Session Spark​","type":1,"pageTitle":"Spark modus","url":"/Trevas/no/developer-guide/spark-mode#session-spark","content":"For å kjøre VTL via Trevas i Spark-modus, må du instansiere en Spark-økt. Økten kan være : lokal (kjører på Java-serveren)statisk (kjører på en Spark-forekomst som tidligere er installert på en server)dynamisk (kjører dynamisk i en Kubernetes-klynge) SparkSession spark = SparkSession.builder().master(&quot;local&quot;).getOrCreate();  ","version":"Neste","tagName":"h3"},{"title":"Eksempel​","type":1,"pageTitle":"Spark modus","url":"/Trevas/no/developer-guide/spark-mode#eksempel","content":"ScriptEngine engine = new ScriptEngineManager().getEngineByName(&quot;vtl&quot;); Bindings bindings = new SimpleBindings(); SparkDataset dataset = new SparkDataset(spark.read().parquet(&quot;folder_path&quot;)); bindings.put(&quot;myDataset&quot;, dataset); engine.getContext().setBindings(bindings, ScriptContext.ENGINE_SCOPE); engine.put(&quot;$vtl.engine.processing_engine_names&quot;, &quot;spark&quot;); engine.put(&quot;$vtl.spark.session&quot;, spark); String script = &quot;res := myDataset[filter var3 &gt; 6];&quot;; try { engine.eval(script); } catch (ScriptException e) { e.printStackTrace(); } Bindings outputBindings = engine.getContext().getBindings(ScriptContext.ENGINE_SCOPE); SparkDataset result = (SparkDataset) outputBindings.get(&quot;res&quot;); // Ensure direct resolution because of spark lazy mechanism (performance warning!) InMemoryDataset imResult = new InMemoryDataset( result.getDataPoints(), result.getDataStructure() );  ","version":"Neste","tagName":"h3"},{"title":"Distribuert utførelse​","type":1,"pageTitle":"Spark modus","url":"/Trevas/no/developer-guide/spark-mode#distribuert-utførelse","content":"Enten i statisk eller dynamisk modus, den distribuerte utførelse av prosessering krever at eksekutørene instansiert av masteren er i stand til å løse VTL-behandlingen. Det er da nødvendig å gi Trevas-krukkene til utførerne via spark.jars alternativet til SparkConf objektet : SparkSession.Builder sparkBuilder = SparkSession.builder() SparkConf conf = new SparkConf(); conf.set(&quot;spark.jars&quot;, String.join(&quot;,&quot;, &quot;/vtl-spark.jar&quot;, &quot;/vtl-model.jar&quot;, &quot;/vtl-parser.jar&quot;, &quot;/vtl-engine.jar&quot;, )); sparkBuilder.config(conf); ... SparkSession spark = sparkBuilder.getOrCreate();  ","version":"Neste","tagName":"h3"},{"title":"Kjører i en Kubernetes klynge​","type":1,"pageTitle":"Spark modus","url":"/Trevas/no/developer-guide/spark-mode#kjører-i-en-kubernetes-klynge","content":"Mange alternativer er beskrevet i den offisielle dokumentasjonen Blant disse er ett alternativ spesielt viktig: Docker-bildet som vil tillate eksekutører å løse VTL-behandling. Et tilpasset bilde er tilgjengelig her. SparkSession.Builder sparkBuilder = SparkSession.builder() SparkConf conf = new SparkConf(); conf.set(&quot;spark.kubernetes.container.image&quot;, &quot;inseefrlab/spark-hadoop:trevas-0.4.7-spark-3.2.1-hadoop-3.3.1-postgresql-42.3.3-postgis-2021.1.0&quot;); conf.set(&quot;spark.kubernetes.container.pullPolicy&quot;, &quot;IfNotPresent&quot;); sparkBuilder.config(conf); sparkBuilder.master(&quot;k8s://...&quot;) ... SparkSession spark = sparkBuilder.getOrCreate();  ","version":"Neste","tagName":"h3"},{"title":"Trevas","type":0,"sectionRef":"#","url":"/Trevas/no/introduction","content":"","keywords":"","version":"Neste"},{"title":"Hva er VTL?​","type":1,"pageTitle":"Trevas","url":"/Trevas/no/introduction#hva-er-vtl","content":"Forretningsmessig, logisk nivå og brukervennlig språk for statistikereStoler på standard strukturelle metadataInteroperabel, plattformagnostiskFunksjonelt språk, som muliggjør datalinje for mer innsikt og reproduserbarhet ","version":"Neste","tagName":"h2"},{"title":"Trevas økosystem​","type":1,"pageTitle":"Trevas","url":"/Trevas/no/introduction#trevas-økosystem","content":" Trevas JupyterTrevas LabTrevas Lab APITrevas Batch ","version":"Neste","tagName":"h2"},{"title":"Teknisk beskrivelse​","type":1,"pageTitle":"Trevas","url":"/Trevas/no/introduction#teknisk-beskrivelse","content":"Trevas leverer VTL-motorer for ulike driftsmiljøer, inkludert en Java 11-motor og en Apache Spark motor. Trevas-motorer er basert på JSR 223 spesifikasjonen som beskriver bruken av skriptspråk i Java. ","version":"Neste","tagName":"h2"},{"title":"Spark modus - Parquet-kilde","type":0,"sectionRef":"#","url":"/Trevas/no/developer-guide/spark-mode/data-sources/parquet","content":"","keywords":"","version":"Neste"},{"title":"Metadata​","type":1,"pageTitle":"Spark modus - Parquet-kilde","url":"/Trevas/no/developer-guide/spark-mode/data-sources/parquet#metadata","content":"Metadata for parkettdatasett utledes fra skjemaet. Slags​ Trevas konverterer mellom parketttyper og typer som støttes av Trevas-motoren. Roller​ VTL-roller legges til av Trevas til Parkett-skjemaet, ved å legge til en vtlRole metadata til hver feltbeskrivelse. Som standard vil kolonner uten rolle i Parkett-skjemaet ha rollen 'MEASURE' i Trevas. VTL lar roller utvikle seg innenfor skript (se her) ","version":"Neste","tagName":"h3"},{"title":"Lesning​","type":1,"pageTitle":"Spark modus - Parquet-kilde","url":"/Trevas/no/developer-guide/spark-mode/data-sources/parquet#lesning","content":"Dataset&lt;Row&gt; sparkDataset = spark.read().parquet(&quot;folder_path&quot;); SparkDataset dataset = new SparkDataset(sparkDataset);  ","version":"Neste","tagName":"h3"},{"title":"Skriving​","type":1,"pageTitle":"Spark modus - Parquet-kilde","url":"/Trevas/no/developer-guide/spark-mode/data-sources/parquet#skriving","content":"// Trevas Spark Dataset SparkDataset dataset = ...; // Spark Dataset Dataset&lt;Row&gt; sparkDataset = dataset.getSparkDataset(); sparkDataset.write() .mode(SaveMode.Overwrite) .parquet(&quot;folder_path&quot;);  ","version":"Neste","tagName":"h3"},{"title":"VTL CSV","type":0,"sectionRef":"#","url":"/Trevas/no/modules/csv","content":"VTL CSV Tools for the use of CSV data sources.","keywords":"","version":"Neste"},{"title":"VTL JDBC","type":0,"sectionRef":"#","url":"/Trevas/no/modules/jdbc","content":"VTL JDBC Verktøy for å jobbe med SQL-datakilder.","keywords":"","version":"Neste"},{"title":"VTL Jackson","type":0,"sectionRef":"#","url":"/Trevas/no/modules/jackson","content":"VTL Jackson Datasett JSON serialisering / deserialisering modul.","keywords":"","version":"Neste"},{"title":"VTL Model","type":0,"sectionRef":"#","url":"/Trevas/no/modules/model","content":"VTL Model Modell som definerer objektene som brukes i motoren.","keywords":"","version":"Neste"},{"title":"VTL SDMX","type":0,"sectionRef":"#","url":"/Trevas/no/modules/sdmx","content":"VTL SDMX Tools for the use of SDMX metadata.","keywords":"","version":"Neste"},{"title":"VTL Engine","type":0,"sectionRef":"#","url":"/Trevas/no/modules/engine","content":"VTL Engine Runtime-motor og dens grunnleggende Java-implementering.","keywords":"","version":"Neste"},{"title":"VTL Spark","type":0,"sectionRef":"#","url":"/Trevas/no/modules/spark","content":"VTL Spark Modul som tillater utførelse av VTL-transformasjoner av Spark.","keywords":"","version":"Neste"},{"title":"Release 1.x.x","type":0,"sectionRef":"#","url":"/Trevas/no/releases/1.x.x","content":"","keywords":"","version":"Neste"},{"title":"Version 1.4.0 - 06/07/24​","type":1,"pageTitle":"Release 1.x.x","url":"/Trevas/no/releases/1.x.x#version-140---060724","content":"(Se teknisk utgivelse på Github) Støtte midlertidige operatørerLegg til VTL CSV-modulLegg til VTL SDMX-modul ","version":"Neste","tagName":"h2"},{"title":"Versjon 1.3.0 - 01/17/24​","type":1,"pageTitle":"Release 1.x.x","url":"/Trevas/no/releases/1.x.x#versjon-130---011724","content":"(Se teknisk utgivelse på Github) Fiks implementeringer av analytiske operatører når de brukes på datasett ","version":"Neste","tagName":"h2"},{"title":"Versjon 1.2.0 - 11/22/23​","type":1,"pageTitle":"Release 1.x.x","url":"/Trevas/no/releases/1.x.x#versjon-120---112223","content":"(Se teknisk utgivelse på Github) Java 17-støtteVedvarende oppdrag (&lt;-) ","version":"Neste","tagName":"h2"},{"title":"Versjon 1.1.1 - 09/09/23​","type":1,"pageTitle":"Release 1.x.x","url":"/Trevas/no/releases/1.x.x#versjon-111---090923","content":"(Se teknisk utgivelse på Github) check_hierarchy rettelser: serialisering og mulighet for å returnere et tomt datasett ","version":"Neste","tagName":"h2"},{"title":"Versjon 1.1.0 - 09/01/23​","type":1,"pageTitle":"Release 1.x.x","url":"/Trevas/no/releases/1.x.x#versjon-110---090123","content":"(Se teknisk utgivelse på Github) Validering: define hierarchical ruleset, check_hierarchy ","version":"Neste","tagName":"h2"},{"title":"Versjon 1.0.2 - 06/30/23​","type":1,"pageTitle":"Release 1.x.x","url":"/Trevas/no/releases/1.x.x#versjon-102---063023","content":"(Se teknisk utgivelse på Github) Registrering av delte motormetoder med 2 metoder: registerMethod og registerGlobalMethodFiks in / not_in feil med null ","version":"Neste","tagName":"h2"},{"title":"Versjon 1.0.1 - 05/23/23​","type":1,"pageTitle":"Release 1.x.x","url":"/Trevas/no/releases/1.x.x#versjon-101---052323","content":"(Se teknisk utgivelse på Github) Løs Spark-serialiseringsproblemet i implementeringen av check_datapoint ","version":"Neste","tagName":"h2"},{"title":"Versjon 1.0.0 - 05/12/23​","type":1,"pageTitle":"Release 1.x.x","url":"/Trevas/no/releases/1.x.x#versjon-100---051223","content":"(Se teknisk utgivelse på Github) Medlemskap: #Validering: check, check_datapointOperatører brukt på datasett (ceil(ds), ds1 &lt; ds2, mod(ds, 5), ...) ","version":"Neste","tagName":"h2"},{"title":"VTL Parser","type":0,"sectionRef":"#","url":"/Trevas/no/modules/parser","content":"VTL Parser Parser generert av Antlr fra VTL 2.0 formell grammatikk.","keywords":"","version":"Neste"},{"title":"Trevas VTL dekning","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage","content":"Trevas VTL dekning Generelle operatører Bli med operatører Strengeoperatorer Numeriske operatorer Sammenligningsoperatører Boolske operatorer Tidsoperatører Still inn operatører Hierarkisk aggregering Samlede operatører Analytiske operatører Datavalideringsoperatører Betingede operatører Klausuloperatører","keywords":"","version":"Neste"},{"title":"VTL - Analytiske operatører","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage/analytic-operators","content":"VTL - Analytiske operatører Navn\tSymbol\tInMemory\tSparkAnalytisk påkalling ❌\t✔️ Telle antall datapunkter\tcount\t❌\t✔️ Minimumsverdi\tmin\t❌\t✔️ Maksimal verdi\tmax\t❌\t✔️ Medianverdi\tmedian\t❌\t✔️ Sum\tsum\t❌\t✔️ Gjennomsnittlig verdi\tavg\t❌\t✔️ Populasjonsstandardavvik\tstddev_pop\t❌\t✔️ Eksempel på standardavvik\tstddev_samp\t❌\t✔️ Varianspopulasjon\tvar_pop\t❌\t✔️ Prøveavvik\tvar_samp\t❌\t✔️ Førsteverdi\tfirst_value\t❌\t✔️ Siste verdi\tlast_value\t❌\t✔️ Lag\tlag\t❌\t✔️ Leder\tlead\t❌\t✔️ Rangering\trank\t❌\t✔️ Forhold til rapportering\tratio_to_report\t❌\t✔️","keywords":"","version":"Neste"},{"title":"VTL - Aggregerte operatører","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage/aggregate-operators","content":"VTL - Aggregerte operatører Navn\tSymbol\tInMemory\tSparkSummon Aggregate ✔️\t✔️ Telle antall datapunkter\tcount\t✔️\t✔️ Minimumsverdi\tmin\t✔️\t✔️ Maksimal verdi\tmax\t✔️\t✔️ Medianverdi\tmedian\t✔️\t✔️ Sum\tsum\t✔️\t✔️ Gjennomsnittlig verdi\tavg\t✔️\t✔️ Populasjonsstandardavvik\tstddev_pop\t✔️\t✔️ Eksempel på standardavvik\tstddev_samp\t✔️\t✔️ Varianspopulasjon\tvar_pop\t✔️\t✔️ Prøveavvik\tvar_samp\t✔️\t✔️","keywords":"","version":"Neste"},{"title":"Trevas releases","type":0,"sectionRef":"#","url":"/Trevas/no/releases","content":"Trevas releases v1.x.x","keywords":"","version":"Neste"},{"title":"VTL - Boolske operatorer","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage/boolean-operators","content":"VTL - Boolske operatorer Navn\tSymbol\tBoolean\tComponent\tDatasetLogisk konjunksjon\tand\t✔️\t✔️\t✔️ Logisk disjunksjon\tor\t✔️\t✔️\t✔️ Eksklusiv disjunksjon\txor\t✔️\t✔️\t✔️ Logisk fornektelse\tnot\t✔️\t✔️\t✔️","keywords":"","version":"Neste"},{"title":"VTL - Klausuloperatører","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage/clause-operators","content":"VTL - Klausuloperatører Navn\tSymbol\tInMemory\tSparkFiltrere datapunkter\tfilter\t✔️\t✔️ Beregning av en komponent\tcalc\t✔️\t✔️ Aggregasjon\taggr\t❌\t✔️ Vedlikeholde komponenter\tkeep\t✔️\t✔️ Fjerning av komponenter\tdrop\t✔️\t✔️ Endring av komponentnavn\trename\t✔️\t✔️ Pivoting\tpivot\t❌\t❌ Fjerner pivotering\tunpivot\t❌\t❌ Underrom\tsub\t❌\t❌","keywords":"","version":"Neste"},{"title":"VTL - Betingede operatører","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage/conditional-operators","content":"VTL - Betingede operatører Navn\tSymbol\tBoolean\tComponent\tDatasetOm så annet\tif-then-else\t✔️\t✔️\t✔️ Null verdi\tnvl\t✔️\t✔️\t✔️","keywords":"","version":"Neste"},{"title":"VTL - Datavalideringsoperatører","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage/data-validation-operators","content":"VTL - Datavalideringsoperatører Navn\tSymbol\tSupportedSjekk datapunktet\tcheck_datapoint\t✔️ Sjekk hierarki\tcheck_hierarchy\t✔️ Sjekk\tcheck\t✔️","keywords":"","version":"Neste"},{"title":"VTL - Generelle operatører","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage/general-operators","content":"VTL - Generelle operatører Navn\tSymbol\tSupportedParenteser\t( )\t✔️ Vedvarende oppdrag\t&lt;-\t✔️ Midlertidig oppdrag\t:=\t✔️ Medlemskap\t#\t✔️ Brukerdefinert operatøranrop ✔️ Evaluering av ekstern rutine\teval\t❌ Typekonvertering (streng, heltall, dobbel, boolsk)\tcast\t✔️ Typekonvertering (andre)\tcast\t❌","keywords":"","version":"Neste"},{"title":"VTL - Sammenligningsoperatører","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage/comparison-operators","content":"VTL - Sammenligningsoperatører Navn\tSymbol\tScalar\tComponent\tDatasetLik\t=\t✔️\t✔️\t✔️ Ikke lik\t&lt;&gt;\t✔️\t✔️\t✔️ Større enn\t&gt;\t✔️\t✔️\t✔️ Mindre enn\t&lt;\t✔️\t✔️\t✔️ Større eller lik\t&gt; =\t✔️\t✔️\t✔️ Mindre eller lik\t&lt;=\t✔️\t✔️\t✔️ Mellom\tbetween\t✔️\t✔️\t✔️ Element av\tin / not_in\t✔️\t✔️\t✔️ Match tegn\tmatch_characters\t✔️\t✔️\t✔️ Er null\tisnull\t✔️\t✔️\t✔️ Finnes i\texists_in\tN/A\tN/A\t❌","keywords":"","version":"Neste"},{"title":"VTL - Bli med operatører","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage/join-operators","content":"VTL - Bli med operatører Navn\tSymbol\tInMemory\tSparkBli med\tinner_join, left_join, full_join, cross_join\t✔️\t✔️","keywords":"","version":"Neste"},{"title":"VTL - Still inn operatører","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage/set-operators","content":"VTL - Still inn operatører Navn\tSymbol\tInMemory\tSparkUnion\tunion\t❌\t✔️ Kryss\tintersect\t❌\t❌ Sett forskjell\tsetdiff\t❌\t❌ Symmetrisk forskjell\tsymdiff\t❌\t❌","keywords":"","version":"Neste"},{"title":"VTL - Hierarkisk aggregering","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage/hierarchical-aggregation","content":"VTL - Hierarkisk aggregering Navn\tSymbol\tInMemory\tSparkHierarkisk opprulling\thierarchy\t❌\t❌","keywords":"","version":"Neste"},{"title":"VTL - Numeriske operatorer","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage/numeric-operators","content":"VTL - Numeriske operatorer Navn\tSymbol\tNumber\tComponent\tDatasetUnært pluss\t+\t✔️\t✔️\t✔️ Unær minus\t-\t✔️\t✔️\t✔️ Tillegg\t+\t✔️\t✔️\t✔️ Subtraksjon\t-\t✔️\t✔️\t✔️ Multiplikasjon\t*\t✔️\t✔️\t✔️ Divisjon\t/\t✔️\t✔️\t✔️ Sammenkobling\t||\t✔️\t✔️\t✔️ Modulo\tmod\t✔️\t✔️\t✔️ Avrunding\tround\t✔️\t✔️\t✔️ Trunkering\ttrunc\t✔️\t✔️\t✔️ Tak\tceil\t✔️\t✔️\t✔️ Gulv\tfloor\t✔️\t✔️\t✔️ Absolutt verdi\tabs\t✔️\t✔️\t✔️ Eksponentiell\texp\t✔️\t✔️\t✔️ Naturlig logaritme\tln\t✔️\t✔️\t✔️ Strøm\tpower\t✔️\t✔️\t✔️ Logaritme\tlog\t✔️\t✔️\t✔️ Kvadratrot\tsqrt\t✔️\t✔️\t✔️","keywords":"","version":"Neste"},{"title":"Trevas klientapper","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/vtl/client-apps","content":"Trevas klientapper Trevas Jupyter Kernel Jupyter Trevas Lab Application web","keywords":"","version":"Neste"},{"title":"VTL - Tidsoperatører","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage/time-operators","content":"VTL - Tidsoperatører Navn\tSymbol\tTime_period\tComponent\tDatasetPeriodeindikator\tperiod_indicator\t✔️\t✔️\t✔️ Fyll tidsserier\tfill_time_series\tN/A\tN/A\t❌ Flyt til lager\tflow_to_stock\tN/A\tN/A\t✔️ Aksje til flyt\tstock_to_flow\tN/A\tN/A\t✔️ Tidsforskyvning\ttimeshift\t✔️\t✔️\t✔️ Tidsaggregering\ttime_agg\tN/A\tN/A\t❌ Faktisk tid\tcurrent_date\t✔️\tN/A\tN/A","keywords":"","version":"Neste"},{"title":"VTL","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/vtl","content":"","keywords":"","version":"Neste"},{"title":"Dokumentasjon​","type":1,"pageTitle":"VTL","url":"/Trevas/no/user-guide/vtl#dokumentasjon","content":"VTL-dokumentasjon er tilgjengelig på den offisielle nettsiden SDMX : BrukermanualReferansehåndbok ","version":"Neste","tagName":"h2"},{"title":"Datasett​","type":1,"pageTitle":"VTL","url":"/Trevas/no/user-guide/vtl#datasett","content":"VTL-datasett må beskrives med metadata. De forskjellige kolonnene har en type og en rolle. Som standard, i Trevas, vil en kolonne uten type eller rolle bli tildelt type string og rolle measure. Brukeren vil da ha muligheten til å mutere disse attributtene i skriptet sitt, spesielt via calc og cast operatorene. ","version":"Neste","tagName":"h2"},{"title":"Enkelt eksempel​","type":1,"pageTitle":"VTL","url":"/Trevas/no/user-guide/vtl#enkelt-eksempel","content":"Å vurdere ds_1 definerer som følger : \tid_1\tid_2\tme_1type\tstring\tstring\tstring role\tidentifier\tidentifier\tmeasure id_1\tid_2\tme_1&quot;75001&quot;\t&quot;75&quot;\t&quot;10&quot; &quot;75002&quot;\t&quot;75&quot;\t&quot;100&quot; &quot;70001&quot;\t&quot;70&quot;\t&quot;5&quot; &quot;70002&quot;\t&quot;70&quot;\t&quot;70&quot; For å få summen av meg_1 med id_2, er det nødvendig at bare id_2 har rollen identifikator, og at typen meg_1 er heltall. Vi bruker derfor følgende skript : ds_2 := ds_1[calc measure id_2 := id_2, me_1 := cast(me_1, integer)];  ds_2 er da : \tid_1\tid_2\tme_1type\tstring\tstring\tinteger role\tmeasure\tidentifier\tmeasure id_1\tid_2\tme_1&quot;75001&quot;\t&quot;75&quot;\t10 &quot;75002&quot;\t&quot;75&quot;\t100 &quot;70001&quot;\t&quot;70&quot;\t5 &quot;70002&quot;\t&quot;70&quot;\t70 Vi kan nå bruke aggr operatoren : ds_3 := ds_2[aggr sum_me_1 := sum(me_1) group by id_2];  Og få ds_3 : \tid_2\tsum_me_1type\tstring\tinteger role\tidentifier\tmeasure id_2\tme_1&quot;75&quot;\t110 &quot;70&quot;\t75 ","version":"Neste","tagName":"h2"},{"title":"VTL - Strengeoperatorer","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/coverage/string-operators","content":"VTL - Strengeoperatorer Navn\tSymbol\tString\tComponent\tDatasetStrengesammenkobling\t||\t✔️\t✔️\t✔️ Fjerning av mellomrom\ttrim, rtrim, ltrim\t✔️\t✔️\t✔️ Konvertering av store og små bokstaver\tupper/lower\t✔️\t✔️\t✔️ Sub-string ekstraksjon\tsubstr\t✔️\t✔️\t✔️ Utskifting av strengmønster\treplace\t✔️\t✔️\t✔️ Plassering av strengmønster\tinstr\t✔️\t✔️\t✔️ Strengelengde\tlength\t✔️\t✔️\t✔️","keywords":"","version":"Neste"},{"title":"Trevas Jupyter","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/vtl/client-apps/jupyter","content":"","keywords":"","version":"Neste"},{"title":"Kilder​","type":1,"pageTitle":"Trevas Jupyter","url":"/Trevas/no/user-guide/vtl/client-apps/jupyter#kilder","content":"Github​ Trevas Jupyter Docker Hub​ Trevas Jupyter ","version":"Neste","tagName":"h3"},{"title":"Demo​","type":1,"pageTitle":"Trevas Jupyter","url":"/Trevas/no/user-guide/vtl/client-apps/jupyter#demo","content":"En video kommer snart ","version":"Neste","tagName":"h3"},{"title":"Drop","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/vtl/sas-vtl/drop","content":"Drop Sas VTL","keywords":"","version":"Neste"},{"title":"Sas vs VTL eksempler","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/vtl/sas-vtl","content":"Sas vs VTL eksempler Keep Drop Rename","keywords":"","version":"Neste"},{"title":"Trevas Jupyter","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/vtl/client-apps/lab","content":"","keywords":"","version":"Neste"},{"title":"Kilder​","type":1,"pageTitle":"Trevas Jupyter","url":"/Trevas/no/user-guide/vtl/client-apps/lab#kilder","content":"Github​ Trevas Lab UITrevas LabTrevas Spark Hadoop Docker Hub​ Trevas Lab UITrevas LabTrevas Spark Hadoop ","version":"Neste","tagName":"h3"},{"title":"Demo​","type":1,"pageTitle":"Trevas Jupyter","url":"/Trevas/no/user-guide/vtl/client-apps/lab#demo","content":"En video kommer snart ","version":"Neste","tagName":"h3"},{"title":"Keep","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/vtl/sas-vtl/keep","content":"Keep Sas VTL","keywords":"","version":"Neste"},{"title":"Rename","type":0,"sectionRef":"#","url":"/Trevas/no/user-guide/vtl/sas-vtl/rename","content":"Rename Sas VTL","keywords":"","version":"Neste"}]