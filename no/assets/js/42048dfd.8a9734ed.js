"use strict";(self.webpackChunktrevas_documentation=self.webpackChunktrevas_documentation||[]).push([[4203],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,f=p["".concat(s,".").concat(m)]||p[m]||c[m]||a;return n?o.createElement(f,l(l({ref:t},u),{},{components:n})):o.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var d=2;d<a;d++)l[d]=n[d];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},56219:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var o=n(87462),r=(n(67294),n(3905));const a={id:"sdmx",title:"Spark mode - SDMX source",sidebar_label:"SDMX",slug:"/developer-guide/spark-mode/data-sources/sdmx",custom_edit_url:null},l=void 0,i={unversionedId:"developer-guide/spark-mode/data-sources/sdmx",id:"developer-guide/spark-mode/data-sources/sdmx",title:"Spark mode - SDMX source",description:"vtl-sdmx module exposes the following utilities.",source:"@site/i18n/no/docusaurus-plugin-content-docs/current/developer-guide/spark-mode/data-sources/sdmx.mdx",sourceDirName:"developer-guide/spark-mode/data-sources",slug:"/developer-guide/spark-mode/data-sources/sdmx",permalink:"/Trevas/no/developer-guide/spark-mode/data-sources/sdmx",draft:!1,editUrl:null,tags:[],version:"current",lastUpdatedAt:1720593860,formattedLastUpdatedAt:"10. jul. 2024",frontMatter:{id:"sdmx",title:"Spark mode - SDMX source",sidebar_label:"SDMX",slug:"/developer-guide/spark-mode/data-sources/sdmx",custom_edit_url:null},sidebar:"docs",previous:{title:"Parquet",permalink:"/Trevas/no/developer-guide/spark-mode/data-sources/parquet"},next:{title:"Andre",permalink:"/Trevas/no/developer-guide/spark-mode/data-sources/others"}},s={},d=[{value:"<code>buildStructureFromSDMX3</code> utility",id:"buildstructurefromsdmx3-utility",level:3},{value:"<code>SDMXVTLWorkflow</code> object",id:"sdmxvtlworkflow-object",level:3},{value:"SDMXVTLWorkflow <code>run</code> function - Preview mode",id:"sdmxvtlworkflow-run-function---preview-mode",level:3},{value:"SDMXVTLWorkflow <code>run</code> function",id:"sdmxvtlworkflow-run-function",level:3},{value:"SDMXVTLWorkflow <code>getTransformationsVTL</code> function",id:"sdmxvtlworkflow-gettransformationsvtl-function",level:3},{value:"SDMXVTLWorkflow <code>getRulesetsVTL</code> function",id:"sdmxvtlworkflow-getrulesetsvtl-function",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Hadoop client",id:"hadoop-client",level:3}],u={toc:d};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"vtl-sdmx")," module exposes the following utilities."),(0,r.kt)("h3",{id:"buildstructurefromsdmx3-utility"},(0,r.kt)("inlineCode",{parentName:"h3"},"buildStructureFromSDMX3")," utility"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TrevasSDMXUtils.buildStructureFromSDMX3")," allows to obtain a Trevas DataStructure."),(0,r.kt)("p",null,"Providing corresponding data, you can build a Trevas Dataset."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Structured.DataStructure structure = TrevasSDMXUtils.buildStructureFromSDMX3("path/sdmx_file.xml", "STRUCT_ID");\n\nSparkDataset ds = new SparkDataset(\n        spark.read()\n                .option("header", "true")\n                .option("delimiter", ";")\n                .option("quote", "\\"")\n                .csv("path"),\n        structure\n);\n')),(0,r.kt)("h3",{id:"sdmxvtlworkflow-object"},(0,r.kt)("inlineCode",{parentName:"h3"},"SDMXVTLWorkflow")," object"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"SDMXVTLWorkflow")," constructor takes 3 arguments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"a ",(0,r.kt)("inlineCode",{parentName:"li"},"ScriptEngine")," (Trevas or another)"),(0,r.kt)("li",{parentName:"ul"},"a ",(0,r.kt)("inlineCode",{parentName:"li"},"ReadableDataLocation")," to handle an SDMX message"),(0,r.kt)("li",{parentName:"ul"},"a map of names / Datasets")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'SparkSession.builder()\n                .appName("test")\n                .master("local")\n                .getOrCreate();\n\nScriptEngineManager mgr = new ScriptEngineManager();\nScriptEngine engine = mgr.getEngineByExtension("vtl");\nengine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, "spark");\n\nReadableDataLocation rdl = new ReadableDataLocationTmp("src/test/resources/DSD_BPE_CENSUS.xml");\n\nSDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\n')),(0,r.kt)("p",null,"This object then allows you to activate the following 3 functions."),(0,r.kt)("h3",{id:"sdmxvtlworkflow-run-function---preview-mode"},"SDMXVTLWorkflow ",(0,r.kt)("inlineCode",{parentName:"h3"},"run")," function - Preview mode"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"run")," function can easily be called in a preview mode, without attached data."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'ScriptEngineManager mgr = new ScriptEngineManager();\nScriptEngine engine = mgr.getEngineByExtension("vtl");\nengine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, "spark");\n\nReadableDataLocation rdl = new ReadableDataLocationTmp("src/test/resources/DSD_BPE_CENSUS.xml");\n\nSDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\n\n// instead of using TrevasSDMXUtils.buildStructureFromSDMX3 and data sources\n// to build Trevas Datasets, sdmxVtlWorkflow.getEmptyDatasets()\n// will handle SDMX message structures to produce Trevas Datasets\n// with metadata defined in this message, and adding empty data\nMap<String, Dataset> emptyDatasets = sdmxVtlWorkflow.getEmptyDatasets();\nengine.getBindings(ScriptContext.ENGINE_SCOPE).putAll(emptyDatasets);\n\nMap<String, PersistentDataset> result = sdmxVtlWorkflow.run();\n')),(0,r.kt)("p",null,"The preview mode allows to check the conformity of the SDMX file and the metadata of the output datasets."),(0,r.kt)("h3",{id:"sdmxvtlworkflow-run-function"},"SDMXVTLWorkflow ",(0,r.kt)("inlineCode",{parentName:"h3"},"run")," function"),(0,r.kt)("p",null,"Once an ",(0,r.kt)("inlineCode",{parentName:"p"},"SDMXVTLWorkflow")," is built, it is easy to run the VTL validations and transformations defined in the SDMX file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Structured.DataStructure structure = TrevasSDMXUtils.buildStructureFromSDMX3("path/sdmx_file.xml", "ds1");\n\nSparkDataset ds1 = new SparkDataset(\n        spark.read()\n                .option("header", "true")\n                .option("delimiter", ";")\n                .option("quote", "\\"")\n                .csv("path/data.csv"),\n        structure\n);\n\nScriptEngineManager mgr = new ScriptEngineManager();\nScriptEngine engine = mgr.getEngineByExtension("vtl");\nengine.put(VtlScriptEngine.PROCESSING_ENGINE_NAMES, "spark");\n\nMap<String, Dataset> inputs = Map.of("ds1", ds1);\n\nReadableDataLocation rdl = new ReadableDataLocationTmp("path/sdmx_file.xml");\n\nSDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, inputs);\n\nMap<String, PersistentDataset> bindings = sdmxVtlWorkflow.run();\n')),(0,r.kt)("p",null,"As a result, one will receive all the dataset defined as persistent in the ",(0,r.kt)("inlineCode",{parentName:"p"},"TransformationSchemes")," definition."),(0,r.kt)("h3",{id:"sdmxvtlworkflow-gettransformationsvtl-function"},"SDMXVTLWorkflow ",(0,r.kt)("inlineCode",{parentName:"h3"},"getTransformationsVTL")," function"),(0,r.kt)("p",null,"Gets the VTL code corresponding to the SDMX TransformationSchemes definition."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"SDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\nString vtl = sdmxVtlWorkflow.getTransformationsVTL();\n")),(0,r.kt)("h3",{id:"sdmxvtlworkflow-getrulesetsvtl-function"},"SDMXVTLWorkflow ",(0,r.kt)("inlineCode",{parentName:"h3"},"getRulesetsVTL")," function"),(0,r.kt)("p",null,"Gets the VTL code corresponding to the SDMX TransformationSchemes definition."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"SDMXVTLWorkflow sdmxVtlWorkflow = new SDMXVTLWorkflow(engine, rdl, Map.of());\nString dprs = sdmxVtlWorkflow.getRulesetsVTL();\n")),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("h3",{id:"hadoop-client"},"Hadoop client"),(0,r.kt)("p",null,"The integration of ",(0,r.kt)("inlineCode",{parentName:"p"},"vtl-modules")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"hadoop-client")," can cause dependency issues."),(0,r.kt)("p",null,"It was noted that ",(0,r.kt)("inlineCode",{parentName:"p"},"com.fasterxml.woodstox.woodstox-core")," is imported by ",(0,r.kt)("inlineCode",{parentName:"p"},"hadoop-client"),", with an incompatible version for a ",(0,r.kt)("inlineCode",{parentName:"p"},"vtl-sdmx")," sub-dependency."),(0,r.kt)("p",null,"A way to fix is to exclude ",(0,r.kt)("inlineCode",{parentName:"p"},"com.fasterxml.woodstox.woodstox-core")," dependency from ",(0,r.kt)("inlineCode",{parentName:"p"},"hadoop-client")," and import a newest version in your ",(0,r.kt)("inlineCode",{parentName:"p"},"pom.xml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.apache.hadoop</groupId>\n    <artifactId>hadoop-client</artifactId>\n    <version>3.3.4</version>\n    <exclusions>\n        <exclusion>\n            <groupId>com.fasterxml.woodstox</groupId>\n            <artifactId>woodstox-core</artifactId>\n        </exclusion>\n    </exclusions>\n</dependency>\n<dependency>\n    <groupId>com.fasterxml.woodstox</groupId>\n    <artifactId>woodstox-core</artifactId>\n    <version>6.5.1</version>\n</dependency>\n")))}p.isMDXComponent=!0}}]);